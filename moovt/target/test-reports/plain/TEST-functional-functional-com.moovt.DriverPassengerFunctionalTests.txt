Testsuite: com.moovt.DriverPassengerFunctionalTests
Tests run: 12, Failures: 0, Errors: 0, Time elapsed: 4.699 sec
------------- Standard Output ---------------
--Output from testUpdateUserDriverEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"wheatonCityDriverUser","password":"Welcome!1",locale:"pt_BR"}
				
================================================================================
2013-09-20 17:37:45,784 [http-bio-8080-exec-1] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"wheatonCityDriverUser","password":"Welcome!1",locale:"pt_BR"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Hibernate: select role0_.id as id6_0_, role0_.version as version6_0_, role0_.authority as authority6_0_, role0_.created_by as created4_6_0_, role0_.date_created as date5_6_0_, role0_.last_updated as last6_6_0_, role0_.last_updated_by as last7_6_0_, role0_.tenant_id as tenant8_6_0_ from role role0_ where role0_.id=?
2013-09-20 17:37:45,936 [http-bio-8080-exec-1] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER]

2013-09-20 17:37:45,962 [http-bio-8080-exec-1] WARN  common.LoginController  - A user has a new apns token. The user id is 10

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"0545690D4B0E8B1F41E3BCF9CB468049","userType":"DRIVER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/user/updateLoggedUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"version":"4","firstName":"John","lastName":"OldWeathon","username":"wheatonCityDriverUser","password":"Welcome!1","phone":"773-329-1784","email":"oldWheaton@mtaxi.com","locale":"en-US","driver":{"servedLocation":{"locationName":"Functional Test Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}}
				
================================================================================
2013-09-20 17:37:46,410 [http-bio-8080-exec-2] INFO  common.UserController  - updateLoggedUser params are: [action:updateLoggedUser, controller:user] and model is : 
				{"version":"4","firstName":"John","lastName":"OldWeathon","username":"wheatonCityDriverUser","password":"Welcome!1","phone":"773-329-1784","email":"oldWheaton@mtaxi.com","locale":"en-US","driver":{"servedLocation":{"locationName":"Functional Test Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}}
				

Hibernate: select tenant0_.id as id1_0_, tenant0_.version as version1_0_, tenant0_.created_by as created3_1_0_, tenant0_.date_created as date4_1_0_, tenant0_.last_updated as last5_1_0_, tenant0_.last_updated_by as last6_1_0_, tenant0_.name as name1_0_ from tenant tenant0_ where tenant0_.id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
2013-09-20 17:37:46,458 [http-bio-8080-exec-2] INFO  common.UserController  - Retrieved User: <com.moovt.audit.User@61398450 springSecurityService=grails.plugins.springsecurity.SpringSecurityService@2c5bb455 username=wheatonCityDriverUser password=d1TzcRk41+KYYZXgaC0ek58Dc1KK6pDDVl3nFZPESAY= firstName=wheatonCityDriverUser lastName=Goodarm phone=800-800-2020 email=egoncalves@moovt.com apnsToken=null enabled=true accountExpired=false accountLocked=false passwordExpired=false locale=en_US tenantname=null tenantId=2 createdBy=2 lastUpdatedBy=2 dateCreated=2013-09-20 17:37:42.0 lastUpdated=2013-09-20 17:37:46.0 CRUDMessage=null errors=null id=10 version=1 passenger=null driver=com.moovt.taxi.Driver : 10>

2013-09-20 17:37:46,458 [http-bio-8080-exec-2] INFO  common.UserController  - Comparing retrieved User Version 1 with JSON Version 4

2013-09-20 17:37:46,484 [http-bio-8080-exec-2] INFO  common.UserController  - Updating servedLocation, carType, and activeStatus

Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
2013-09-20 17:37:46,496 [http-bio-8080-exec-2] INFO  common.UserController  - Driver being saved <com.moovt.taxi.Driver@6d4d8e91 activeStatus=ENABLED carType=B_VAN servedLocation=com.moovt.taxi.Location : 1 tenantId=2 createdBy=2 lastUpdatedBy=2 dateCreated=2013-09-20 17:37:42.0 lastUpdated=2013-09-20 17:37:42.0 CRUDMessage=null errors=null id=10 version=0 user=com.moovt.audit.User : 10>

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
Hibernate: update location set version=?, created_by=?, date_created=?, last_updated=?, last_updated_by=?, latitude=?, location_name=?, location_type=?, longitude=?, political_name=?, tenant_id=? where id=? and version=?
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.authority as authority6_0_, this_.created_by as created4_6_0_, this_.date_created as date5_6_0_, this_.last_updated as last6_6_0_, this_.last_updated_by as last7_6_0_, this_.tenant_id as tenant8_6_0_ from role this_ where this_.tenant_id=? and this_.authority=? limit ?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:46,513 [http-bio-8080-exec-2] INFO  common.UserController  - User being saved <com.moovt.audit.User@61398450 springSecurityService=grails.plugins.springsecurity.SpringSecurityService@2c5bb455 username=wheatonCityDriverUser password=d1TzcRk41+KYYZXgaC0ek58Dc1KK6pDDVl3nFZPESAY= firstName=John lastName=OldWeathon phone=773-329-1784 email=oldWheaton@mtaxi.com apnsToken=null enabled=true accountExpired=false accountLocked=false passwordExpired=false locale=en-US tenantname=null tenantId=2 createdBy=2 lastUpdatedBy=2 dateCreated=2013-09-20 17:37:42.0 lastUpdated=Fri Sep 20 17:37:46 CDT 2013 CRUDMessage=null errors=grails.validation.ValidationErrors: 0 errors id=10 version=2 passenger=null driver=com.moovt.taxi.Driver : 10>

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"User wheatonCityDriverUser updated"}, "user":{"id":10,"version":2,"username":"wheatonCityDriverUser","firstName":"John","lastName":"OldWeathon","phone":"773-329-1784","email":"oldWheaton@mtaxi.com","driver":{"servedLocation":{"locationName":"Functional Test Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}}}
================================================================================
#
--Output from testCreateUserPassengerWithTokenEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname":"MTaxi","firstName":"John","lastName":"TestToken","username":"testToken","password":"Welcome!1","phone":"773-329-1784","email":"testToken@moovt.com","locale":"en-US","apnsToken":"9a1cd75847e20f1a27132790dfe1a0cb4107f42da1a39c019dd1a0820fc5c504", "passenger":{}}}
				
================================================================================
2013-09-20 17:37:46,708 [http-bio-8080-exec-4] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname":"MTaxi","firstName":"John","lastName":"TestToken","username":"testToken","password":"Welcome!1","phone":"773-329-1784","email":"testToken@moovt.com","locale":"en-US","apnsToken":"9a1cd75847e20f1a27132790dfe1a0cb4107f42da1a39c019dd1a0820fc5c504", "passenger":{}}}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:46,724 [http-bio-8080-exec-4] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: insert into user (version, account_expired, account_locked, apns_token, created_by, date_created, email, enabled, first_name, last_name, last_updated, last_updated_by, locale, `password`, password_expired, phone, tenant_id, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.authority as authority6_0_, this_.created_by as created4_6_0_, this_.date_created as date5_6_0_, this_.last_updated as last6_6_0_, this_.last_updated_by as last7_6_0_, this_.tenant_id as tenant8_6_0_ from role this_ where this_.tenant_id=? and this_.authority=? limit ?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: insert into passenger (version, created_by, date_created, last_updated, last_updated_by, tenant_id, user_id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into user_role (created_by, date_created, last_updated, last_updated_by, tenant_id, role_id, user_id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"User testToken created"}, "additionalInfo":{"JSESSIONID":"890433A7684D6381460280668CA39A08"}}
================================================================================
#
--Output from testUpdateUserPassengerEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1",locale:"pt_BR"}
				
================================================================================
2013-09-20 17:37:46,861 [http-bio-8080-exec-6] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1",locale:"pt_BR"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:46,887 [http-bio-8080-exec-6] INFO  common.LoginController  - User has been successfully authenticated [ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"027F78D0B911D5EECAAC64D1BA348A72","userType":"PASSENGER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/user/updateLoggedUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"version":"7","firstName":"John","lastName":"DecidedToBeADriver","username":"jgoodrider","password":"Welcome!1","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","locale":"en-US","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}}
				
================================================================================
2013-09-20 17:37:46,934 [http-bio-8080-exec-7] INFO  common.UserController  - updateLoggedUser params are: [action:updateLoggedUser, controller:user] and model is : 
				{"version":"7","firstName":"John","lastName":"DecidedToBeADriver","username":"jgoodrider","password":"Welcome!1","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","locale":"en-US","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}}
				

Hibernate: select tenant0_.id as id1_0_, tenant0_.version as version1_0_, tenant0_.created_by as created3_1_0_, tenant0_.date_created as date4_1_0_, tenant0_.last_updated as last5_1_0_, tenant0_.last_updated_by as last6_1_0_, tenant0_.name as name1_0_ from tenant tenant0_ where tenant0_.id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
2013-09-20 17:37:46,945 [http-bio-8080-exec-7] INFO  common.UserController  - Retrieved User: <com.moovt.audit.User@258704f4 springSecurityService=grails.plugins.springsecurity.SpringSecurityService@2c5bb455 username=jgoodrider password=Hg+3yVgXNrxpuB0aW7vd5ivQkJXgvpwS3jJr2AdA7zo= firstName=John lastName=Goodrider phone=800-800-8080 email=jgoodrider@mtaxi.com apnsToken=null enabled=true accountExpired=false accountLocked=false passwordExpired=false locale=en_US tenantname=null tenantId=2 createdBy=2 lastUpdatedBy=2 dateCreated=2013-09-20 17:37:42.0 lastUpdated=2013-09-20 17:37:42.0 CRUDMessage=null errors=null id=6 version=0 passenger=com.moovt.taxi.Passenger : 6 driver=null>

2013-09-20 17:37:46,945 [http-bio-8080-exec-7] INFO  common.UserController  - Comparing retrieved User Version 0 with JSON Version 7

2013-09-20 17:37:46,948 [http-bio-8080-exec-7] INFO  common.UserController  - Creating driver

Hibernate: insert into location (version, created_by, date_created, last_updated, last_updated_by, latitude, location_name, location_type, longitude, political_name, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
2013-09-20 17:37:46,962 [http-bio-8080-exec-7] INFO  common.UserController  - Driver being saved <com.moovt.taxi.Driver@32192640 activeStatus=ENABLED carType=B_VAN servedLocation=com.moovt.taxi.Location : 22 tenantId=null createdBy=null lastUpdatedBy=null dateCreated=null lastUpdated=null CRUDMessage=null errors=grails.validation.ValidationErrors: 0 errors id=null version=null user=com.moovt.audit.User : 6>

Hibernate: insert into driver (version, active_status, car_type, created_by, date_created, last_updated, last_updated_by, served_location_id, tenant_id, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.authority as authority6_0_, this_.created_by as created4_6_0_, this_.date_created as date5_6_0_, this_.last_updated as last6_6_0_, this_.last_updated_by as last7_6_0_, this_.tenant_id as tenant8_6_0_ from role this_ where this_.tenant_id=? and this_.authority=? limit ?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:46,977 [http-bio-8080-exec-7] INFO  common.UserController  - User being saved <com.moovt.audit.User@258704f4 springSecurityService=grails.plugins.springsecurity.SpringSecurityService@2c5bb455 username=jgoodrider password=Hg+3yVgXNrxpuB0aW7vd5ivQkJXgvpwS3jJr2AdA7zo= firstName=John lastName=DecidedToBeADriver phone=773-329-1784 email=jgoodrider@mtaxi.com apnsToken=null enabled=true accountExpired=false accountLocked=false passwordExpired=false locale=en-US tenantname=null tenantId=2 createdBy=2 lastUpdatedBy=2 dateCreated=2013-09-20 17:37:42.0 lastUpdated=Fri Sep 20 17:37:46 CDT 2013 CRUDMessage=null errors=grails.validation.ValidationErrors: 0 errors id=6 version=1 passenger=com.moovt.taxi.Passenger : 6 driver=com.moovt.taxi.Driver : 6>

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: insert into user_role (created_by, date_created, last_updated, last_updated_by, tenant_id, role_id, user_id) values (?, ?, ?, ?, ?, ?, ?)
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"User jgoodrider updated"}, "user":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}}}
================================================================================
#
--Output from testRetrieveAllUsersrEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "MTaxi", "username": "admin", "password":"911admin","locale":"en_US"}
				
================================================================================
2013-09-20 17:37:47,064 [http-bio-8080-exec-9] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname": "MTaxi", "username": "admin", "password":"911admin","locale":"en_US"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Hibernate: select role0_.id as id6_0_, role0_.version as version6_0_, role0_.authority as authority6_0_, role0_.created_by as created4_6_0_, role0_.date_created as date5_6_0_, role0_.last_updated as last6_6_0_, role0_.last_updated_by as last7_6_0_, role0_.tenant_id as tenant8_6_0_ from role role0_ where role0_.id=?
2013-09-20 17:37:47,083 [http-bio-8080-exec-9] INFO  common.LoginController  - User has been successfully authenticated [ROLE_ADMIN]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"E4B564587E45E924CB37C1FD2D6CB1FC","userType":"NO_TYPE"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/user/retrieveAllUsers parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{}
				
================================================================================
2013-09-20 17:37:47,130 [http-bio-8080-exec-10] INFO  common.UserController  - retrieveAllUsers params are: [action:retrieveAllUsers, controller:user] and model is : 
				{}
				

Hibernate: select tenant0_.id as id1_0_, tenant0_.version as version1_0_, tenant0_.created_by as created3_1_0_, tenant0_.date_created as date4_1_0_, tenant0_.last_updated as last5_1_0_, tenant0_.last_updated_by as last6_1_0_, tenant0_.name as name1_0_ from tenant tenant0_ where tenant0_.id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where (this_.tenant_id=?) order by this_.last_updated desc
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"users":[{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},{"id":19,"version":1,"username":"testToken","firstName":"John","lastName":"TestToken","phone":"773-329-1784","email":"testToken@moovt.com","passenger":{}},{"id":10,"version":2,"username":"wheatonCityDriverUser","firstName":"John","lastName":"OldWeathon","phone":"773-329-1784","email":"oldWheaton@mtaxi.com","driver":{"servedLocation":{"locationName":"Functional Test Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":18,"version":0,"username":"jKeepApnsToken","firstName":"JKeepApnsToken","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":7,"version":0,"username":"jgoodarm","firstName":"John","lastName":"Goodarm","phone":"800-800-2020","email":"jgoodarm@mtaxi.com","driver":{"servedLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":8,"version":0,"username":"jspeedy","firstName":"John","lastName":"Speedy","phone":"800-800-2020","email":"jspeedy@mtaxi.com","driver":{"servedLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":9,"version":0,"username":"napervilleCityDriverUser","firstName":"napervilleCityDriverUser","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":11,"version":0,"username":"auroraCityDriverUser","firstName":"auroraCityDriverUser","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Aurora","politicalName":"Illinois, United States","latitude":41.7605849,"longitude":-88.32007150000001,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":12,"version":0,"username":"plainfieldCityDriverUser","firstName":"plainfieldCityDriverUser","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Plainfield","politicalName":"Illinois, United States","latitude":41.632223,"longitude":-88.2120315,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":13,"version":0,"username":"detroitCityDriverUser","firstName":"detroitCityDriverUser","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Detroit","politicalName":"Michigan, United States","latitude":42.331427,"longitude":-83.0457538,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":14,"version":0,"username":"contagemCityDriverUser","firstName":"contagemCityDriverUser","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Contagem","politicalName":"Minas Gerais, Brazil","latitude":-19.9385599,"longitude":-44.0529377,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":15,"version":0,"username":"vespasianoCityDriverUser","firstName":"vespasianoCityDriverUser","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Vespasiano","politicalName":"Minas Gerais, Brazil","latitude":-19.6933911,"longitude":-43.913722,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":16,"version":0,"username":"carmoDoCajuruCityDriverUser","firstName":"carmoDoCajuruCityDriverUser","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Carmo do Cajuru","politicalName":"Minas Gerais, Brazil","latitude":-20.1870332,"longitude":-44.7731276,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":17,"version":0,"username":"jWillGainApnsToken","firstName":"JWillGainApnsToken","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":2,"version":0,"username":"admin","firstName":"Moovt","lastName":"Taxi","phone":"800-800-8080","email":"mtaxi@moovt.com"}]}
================================================================================
#
--Output from testGetCarTypeEnumPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/driver/getCarTypeEnum parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{}
				
================================================================================
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"carTypes":[{"code":"A_SEDAN","description":"Sedan"},{"code":"B_VAN","description":"Van"},{"code":"C_LIMO","description":"Limo"}]}
================================================================================
#
--Output from testRetrieveLoggedUserDetailsIdEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1",locale:"pt_BR"}
				
================================================================================
2013-09-20 17:37:47,779 [http-bio-8080-exec-6] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1",locale:"pt_BR"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:47,805 [http-bio-8080-exec-6] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER, ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"14340B8FF91D20792CE5F263A4992C30","userType":"PASSENGER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/user/retrieveLoggedUserDetails parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{}
				
================================================================================
2013-09-20 17:37:47,854 [http-bio-8080-exec-6] INFO  common.UserController  - retrieveLoggedUserDetails params are: [action:retrieveLoggedUserDetails, controller:user] and model is : 
				{}
				

Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"user":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}}}
================================================================================
#
--Output from testGetCarTypeEnumEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/driver/getCarTypeEnum parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{}
				
================================================================================
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"carTypes":[{"code":"A_SEDAN","description":"Sedan"},{"code":"B_VAN","description":"Van"},{"code":"C_LIMO","description":"Limo"}]}
================================================================================
#
--Output from testCreateUserPassengerEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname":"MTaxi","firstName":"John","lastName":"Airjunkie","username":"jairjunkie","password":"Welcome!1","phone":"773-329-1784","email":"jairjunkie@mtaxi.com","locale":"en-US","passenger":{}}}
				
================================================================================
2013-09-20 17:37:47,998 [http-bio-8080-exec-7] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname":"MTaxi","firstName":"John","lastName":"Airjunkie","username":"jairjunkie","password":"Welcome!1","phone":"773-329-1784","email":"jairjunkie@mtaxi.com","locale":"en-US","passenger":{}}}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:48,003 [http-bio-8080-exec-7] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: insert into user (version, account_expired, account_locked, apns_token, created_by, date_created, email, enabled, first_name, last_name, last_updated, last_updated_by, locale, `password`, password_expired, phone, tenant_id, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.authority as authority6_0_, this_.created_by as created4_6_0_, this_.date_created as date5_6_0_, this_.last_updated as last6_6_0_, this_.last_updated_by as last7_6_0_, this_.tenant_id as tenant8_6_0_ from role this_ where this_.tenant_id=? and this_.authority=? limit ?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: insert into passenger (version, created_by, date_created, last_updated, last_updated_by, tenant_id, user_id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into user_role (created_by, date_created, last_updated, last_updated_by, tenant_id, role_id, user_id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"User jairjunkie created"}, "additionalInfo":{"JSESSIONID":"6C8B1162635B4619039547913F62FFD6"}}
================================================================================
#
--Output from testGetActiveStatusEnumPortugues--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/driver/getActiveStatusEnum parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{}
				
================================================================================
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"activeStatuses":[{"code":"ENABLED","description":"Ativo"},{"code":"DISABLED","description":"Inativo"}]}
================================================================================
#
--Output from testGetActiveStatusEnumEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/driver/getActiveStatusEnum parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{}
				
================================================================================
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"activeStatuses":[{"code":"ENABLED","description":"Enabled"},{"code":"DISABLED","description":"Disabled"}]}
================================================================================
#
--Output from testCreateUserDriverEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname":"MTaxi","firstName":"David","lastName":"Ultrafast","username":"dultrafast","password":"Welcome!1","phone":"773-329-1784","email":"dultrafast@mtaxi.com","locale":"en-US","driver":{"carType" : {"code" : "A_SEDAN","description" : "Sedan"},"servedLocation":{"locationName":"ARua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"activeStatus":{"code" : "ENABLED"}}}
				
================================================================================
2013-09-20 17:37:48,275 [http-bio-8080-exec-1] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname":"MTaxi","firstName":"David","lastName":"Ultrafast","username":"dultrafast","password":"Welcome!1","phone":"773-329-1784","email":"dultrafast@mtaxi.com","locale":"en-US","driver":{"carType" : {"code" : "A_SEDAN","description" : "Sedan"},"servedLocation":{"locationName":"ARua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"activeStatus":{"code" : "ENABLED"}}}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:48,279 [http-bio-8080-exec-1] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: insert into user (version, account_expired, account_locked, apns_token, created_by, date_created, email, enabled, first_name, last_name, last_updated, last_updated_by, locale, `password`, password_expired, phone, tenant_id, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
Hibernate: insert into location (version, created_by, date_created, last_updated, last_updated_by, latitude, location_name, location_type, longitude, political_name, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.authority as authority6_0_, this_.created_by as created4_6_0_, this_.date_created as date5_6_0_, this_.last_updated as last6_6_0_, this_.last_updated_by as last7_6_0_, this_.tenant_id as tenant8_6_0_ from role this_ where this_.tenant_id=? and this_.authority=? limit ?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: insert into driver (version, active_status, car_type, created_by, date_created, last_updated, last_updated_by, served_location_id, tenant_id, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into user_role (created_by, date_created, last_updated, last_updated_by, tenant_id, role_id, user_id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"User dultrafast created"}, "additionalInfo":{"JSESSIONID":"14A5CDB6D9ED985A6BFCC1D6ED6B2AB8"}}
================================================================================
#
--Output from testRetrieveUserDetailByIdEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "MTaxi", "username": "admin", "password":"911admin","locale":"en_US"}
				
================================================================================
2013-09-20 17:37:48,434 [http-bio-8080-exec-10] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname": "MTaxi", "username": "admin", "password":"911admin","locale":"en_US"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:48,452 [http-bio-8080-exec-10] INFO  common.LoginController  - User has been successfully authenticated [ROLE_ADMIN]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"473467AC23264B486763EBA36B9DFEB2","userType":"NO_TYPE"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/user/retrieveUserDetailById parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"id":"6"}
				
================================================================================
2013-09-20 17:37:48,521 [http-bio-8080-exec-10] INFO  common.UserController  - retrieveUserDetailById params are: [action:retrieveUserDetailById, controller:user] and model is : 
				{"id":"6"}
				

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where (this_.id=?) order by this_.last_updated desc
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"user":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}}}
================================================================================
#
------------- ---------------- ---------------
------------- Standard Error -----------------
--Output from testUpdateUserDriverEnglish--
--Output from testCreateUserPassengerWithTokenEnglish--
--Output from testUpdateUserPassengerEnglish--
--Output from testRetrieveAllUsersrEnglish--
--Output from testGetCarTypeEnumPortuguese--
--Output from testRetrieveLoggedUserDetailsIdEnglish--
--Output from testGetCarTypeEnumEnglish--
--Output from testCreateUserPassengerEnglish--
--Output from testGetActiveStatusEnumPortugues--
--Output from testGetActiveStatusEnumEnglish--
--Output from testCreateUserDriverEnglish--
--Output from testRetrieveUserDetailByIdEnglish--
------------- ---------------- ---------------

Testcase: testUpdateUserDriverEnglish took 2.779 sec
Testcase: testCreateUserPassengerWithTokenEnglish took 0.159 sec
Testcase: testUpdateUserPassengerEnglish took 0.208 sec
Testcase: testRetrieveAllUsersrEnglish took 0.562 sec
Testcase: testGetCarTypeEnumPortuguese took 0.141 sec
Testcase: testRetrieveLoggedUserDetailsIdEnglish took 0.15 sec
Testcase: testGetCarTypeEnumEnglish took 0.058 sec
Testcase: testCreateUserPassengerEnglish took 0.196 sec
Testcase: testGetActiveStatusEnumPortugues took 0.045 sec
Testcase: testGetActiveStatusEnumEnglish took 0.041 sec
Testcase: testCreateUserDriverEnglish took 0.154 sec
Testcase: testRetrieveUserDetailByIdEnglish took 0.166 sec
