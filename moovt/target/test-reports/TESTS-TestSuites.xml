<?xml version="1.0" encoding="UTF-8" ?>
<testsuites>
  <testsuite errors="0" failures="0" hostname="Eduardo-Goncalvess-MacBook-Pro.local" id="0" name="DriverPassengerFunctionalTests" package="com.moovt" tests="12" time="4.699" timestamp="2013-09-20T22:37:43">
      <properties />

      <testcase classname="com.moovt.DriverPassengerFunctionalTests" name="testUpdateUserDriverEnglish" time="2.779" />

      <testcase classname="com.moovt.DriverPassengerFunctionalTests" name="testCreateUserPassengerWithTokenEnglish" time="0.159" />

      <testcase classname="com.moovt.DriverPassengerFunctionalTests" name="testUpdateUserPassengerEnglish" time="0.208" />

      <testcase classname="com.moovt.DriverPassengerFunctionalTests" name="testRetrieveAllUsersrEnglish" time="0.562" />

      <testcase classname="com.moovt.DriverPassengerFunctionalTests" name="testGetCarTypeEnumPortuguese" time="0.141" />

      <testcase classname="com.moovt.DriverPassengerFunctionalTests" name="testRetrieveLoggedUserDetailsIdEnglish" time="0.15" />

      <testcase classname="com.moovt.DriverPassengerFunctionalTests" name="testGetCarTypeEnumEnglish" time="0.058" />

      <testcase classname="com.moovt.DriverPassengerFunctionalTests" name="testCreateUserPassengerEnglish" time="0.196" />

      <testcase classname="com.moovt.DriverPassengerFunctionalTests" name="testGetActiveStatusEnumPortugues" time="0.045" />

      <testcase classname="com.moovt.DriverPassengerFunctionalTests" name="testGetActiveStatusEnumEnglish" time="0.041" />

      <testcase classname="com.moovt.DriverPassengerFunctionalTests" name="testCreateUserDriverEnglish" time="0.154" />

      <testcase classname="com.moovt.DriverPassengerFunctionalTests" name="testRetrieveUserDetailByIdEnglish" time="0.166" />

      <system-out><![CDATA[--Output from testUpdateUserDriverEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"wheatonCityDriverUser","password":"Welcome!1",locale:"pt_BR"}
				
================================================================================
2013-09-20 17:37:45,784 [http-bio-8080-exec-1] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"wheatonCityDriverUser","password":"Welcome!1",locale:"pt_BR"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Hibernate: select role0_.id as id6_0_, role0_.version as version6_0_, role0_.authority as authority6_0_, role0_.created_by as created4_6_0_, role0_.date_created as date5_6_0_, role0_.last_updated as last6_6_0_, role0_.last_updated_by as last7_6_0_, role0_.tenant_id as tenant8_6_0_ from role role0_ where role0_.id=?
2013-09-20 17:37:45,936 [http-bio-8080-exec-1] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER]

2013-09-20 17:37:45,962 [http-bio-8080-exec-1] WARN  common.LoginController  - A user has a new apns token. The user id is 10

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"0545690D4B0E8B1F41E3BCF9CB468049","userType":"DRIVER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/user/updateLoggedUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"version":"4","firstName":"John","lastName":"OldWeathon","username":"wheatonCityDriverUser","password":"Welcome!1","phone":"773-329-1784","email":"oldWheaton@mtaxi.com","locale":"en-US","driver":{"servedLocation":{"locationName":"Functional Test Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}}
				
================================================================================
2013-09-20 17:37:46,410 [http-bio-8080-exec-2] INFO  common.UserController  - updateLoggedUser params are: [action:updateLoggedUser, controller:user] and model is : 
				{"version":"4","firstName":"John","lastName":"OldWeathon","username":"wheatonCityDriverUser","password":"Welcome!1","phone":"773-329-1784","email":"oldWheaton@mtaxi.com","locale":"en-US","driver":{"servedLocation":{"locationName":"Functional Test Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}}
				

Hibernate: select tenant0_.id as id1_0_, tenant0_.version as version1_0_, tenant0_.created_by as created3_1_0_, tenant0_.date_created as date4_1_0_, tenant0_.last_updated as last5_1_0_, tenant0_.last_updated_by as last6_1_0_, tenant0_.name as name1_0_ from tenant tenant0_ where tenant0_.id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
2013-09-20 17:37:46,458 [http-bio-8080-exec-2] INFO  common.UserController  - Retrieved User: <com.moovt.audit.User@61398450 springSecurityService=grails.plugins.springsecurity.SpringSecurityService@2c5bb455 username=wheatonCityDriverUser password=d1TzcRk41+KYYZXgaC0ek58Dc1KK6pDDVl3nFZPESAY= firstName=wheatonCityDriverUser lastName=Goodarm phone=800-800-2020 email=egoncalves@moovt.com apnsToken=null enabled=true accountExpired=false accountLocked=false passwordExpired=false locale=en_US tenantname=null tenantId=2 createdBy=2 lastUpdatedBy=2 dateCreated=2013-09-20 17:37:42.0 lastUpdated=2013-09-20 17:37:46.0 CRUDMessage=null errors=null id=10 version=1 passenger=null driver=com.moovt.taxi.Driver : 10>

2013-09-20 17:37:46,458 [http-bio-8080-exec-2] INFO  common.UserController  - Comparing retrieved User Version 1 with JSON Version 4

2013-09-20 17:37:46,484 [http-bio-8080-exec-2] INFO  common.UserController  - Updating servedLocation, carType, and activeStatus

Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
2013-09-20 17:37:46,496 [http-bio-8080-exec-2] INFO  common.UserController  - Driver being saved <com.moovt.taxi.Driver@6d4d8e91 activeStatus=ENABLED carType=B_VAN servedLocation=com.moovt.taxi.Location : 1 tenantId=2 createdBy=2 lastUpdatedBy=2 dateCreated=2013-09-20 17:37:42.0 lastUpdated=2013-09-20 17:37:42.0 CRUDMessage=null errors=null id=10 version=0 user=com.moovt.audit.User : 10>

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
Hibernate: update location set version=?, created_by=?, date_created=?, last_updated=?, last_updated_by=?, latitude=?, location_name=?, location_type=?, longitude=?, political_name=?, tenant_id=? where id=? and version=?
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.authority as authority6_0_, this_.created_by as created4_6_0_, this_.date_created as date5_6_0_, this_.last_updated as last6_6_0_, this_.last_updated_by as last7_6_0_, this_.tenant_id as tenant8_6_0_ from role this_ where this_.tenant_id=? and this_.authority=? limit ?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:46,513 [http-bio-8080-exec-2] INFO  common.UserController  - User being saved <com.moovt.audit.User@61398450 springSecurityService=grails.plugins.springsecurity.SpringSecurityService@2c5bb455 username=wheatonCityDriverUser password=d1TzcRk41+KYYZXgaC0ek58Dc1KK6pDDVl3nFZPESAY= firstName=John lastName=OldWeathon phone=773-329-1784 email=oldWheaton@mtaxi.com apnsToken=null enabled=true accountExpired=false accountLocked=false passwordExpired=false locale=en-US tenantname=null tenantId=2 createdBy=2 lastUpdatedBy=2 dateCreated=2013-09-20 17:37:42.0 lastUpdated=Fri Sep 20 17:37:46 CDT 2013 CRUDMessage=null errors=grails.validation.ValidationErrors: 0 errors id=10 version=2 passenger=null driver=com.moovt.taxi.Driver : 10>

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"User wheatonCityDriverUser updated"}, "user":{"id":10,"version":2,"username":"wheatonCityDriverUser","firstName":"John","lastName":"OldWeathon","phone":"773-329-1784","email":"oldWheaton@mtaxi.com","driver":{"servedLocation":{"locationName":"Functional Test Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}}}
================================================================================
#
--Output from testCreateUserPassengerWithTokenEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname":"MTaxi","firstName":"John","lastName":"TestToken","username":"testToken","password":"Welcome!1","phone":"773-329-1784","email":"testToken@moovt.com","locale":"en-US","apnsToken":"9a1cd75847e20f1a27132790dfe1a0cb4107f42da1a39c019dd1a0820fc5c504", "passenger":{}}}
				
================================================================================
2013-09-20 17:37:46,708 [http-bio-8080-exec-4] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname":"MTaxi","firstName":"John","lastName":"TestToken","username":"testToken","password":"Welcome!1","phone":"773-329-1784","email":"testToken@moovt.com","locale":"en-US","apnsToken":"9a1cd75847e20f1a27132790dfe1a0cb4107f42da1a39c019dd1a0820fc5c504", "passenger":{}}}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:46,724 [http-bio-8080-exec-4] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: insert into user (version, account_expired, account_locked, apns_token, created_by, date_created, email, enabled, first_name, last_name, last_updated, last_updated_by, locale, `password`, password_expired, phone, tenant_id, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.authority as authority6_0_, this_.created_by as created4_6_0_, this_.date_created as date5_6_0_, this_.last_updated as last6_6_0_, this_.last_updated_by as last7_6_0_, this_.tenant_id as tenant8_6_0_ from role this_ where this_.tenant_id=? and this_.authority=? limit ?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: insert into passenger (version, created_by, date_created, last_updated, last_updated_by, tenant_id, user_id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into user_role (created_by, date_created, last_updated, last_updated_by, tenant_id, role_id, user_id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"User testToken created"}, "additionalInfo":{"JSESSIONID":"890433A7684D6381460280668CA39A08"}}
================================================================================
#
--Output from testUpdateUserPassengerEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1",locale:"pt_BR"}
				
================================================================================
2013-09-20 17:37:46,861 [http-bio-8080-exec-6] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1",locale:"pt_BR"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:46,887 [http-bio-8080-exec-6] INFO  common.LoginController  - User has been successfully authenticated [ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"027F78D0B911D5EECAAC64D1BA348A72","userType":"PASSENGER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/user/updateLoggedUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"version":"7","firstName":"John","lastName":"DecidedToBeADriver","username":"jgoodrider","password":"Welcome!1","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","locale":"en-US","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}}
				
================================================================================
2013-09-20 17:37:46,934 [http-bio-8080-exec-7] INFO  common.UserController  - updateLoggedUser params are: [action:updateLoggedUser, controller:user] and model is : 
				{"version":"7","firstName":"John","lastName":"DecidedToBeADriver","username":"jgoodrider","password":"Welcome!1","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","locale":"en-US","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}}
				

Hibernate: select tenant0_.id as id1_0_, tenant0_.version as version1_0_, tenant0_.created_by as created3_1_0_, tenant0_.date_created as date4_1_0_, tenant0_.last_updated as last5_1_0_, tenant0_.last_updated_by as last6_1_0_, tenant0_.name as name1_0_ from tenant tenant0_ where tenant0_.id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
2013-09-20 17:37:46,945 [http-bio-8080-exec-7] INFO  common.UserController  - Retrieved User: <com.moovt.audit.User@258704f4 springSecurityService=grails.plugins.springsecurity.SpringSecurityService@2c5bb455 username=jgoodrider password=Hg+3yVgXNrxpuB0aW7vd5ivQkJXgvpwS3jJr2AdA7zo= firstName=John lastName=Goodrider phone=800-800-8080 email=jgoodrider@mtaxi.com apnsToken=null enabled=true accountExpired=false accountLocked=false passwordExpired=false locale=en_US tenantname=null tenantId=2 createdBy=2 lastUpdatedBy=2 dateCreated=2013-09-20 17:37:42.0 lastUpdated=2013-09-20 17:37:42.0 CRUDMessage=null errors=null id=6 version=0 passenger=com.moovt.taxi.Passenger : 6 driver=null>

2013-09-20 17:37:46,945 [http-bio-8080-exec-7] INFO  common.UserController  - Comparing retrieved User Version 0 with JSON Version 7

2013-09-20 17:37:46,948 [http-bio-8080-exec-7] INFO  common.UserController  - Creating driver

Hibernate: insert into location (version, created_by, date_created, last_updated, last_updated_by, latitude, location_name, location_type, longitude, political_name, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
2013-09-20 17:37:46,962 [http-bio-8080-exec-7] INFO  common.UserController  - Driver being saved <com.moovt.taxi.Driver@32192640 activeStatus=ENABLED carType=B_VAN servedLocation=com.moovt.taxi.Location : 22 tenantId=null createdBy=null lastUpdatedBy=null dateCreated=null lastUpdated=null CRUDMessage=null errors=grails.validation.ValidationErrors: 0 errors id=null version=null user=com.moovt.audit.User : 6>

Hibernate: insert into driver (version, active_status, car_type, created_by, date_created, last_updated, last_updated_by, served_location_id, tenant_id, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.authority as authority6_0_, this_.created_by as created4_6_0_, this_.date_created as date5_6_0_, this_.last_updated as last6_6_0_, this_.last_updated_by as last7_6_0_, this_.tenant_id as tenant8_6_0_ from role this_ where this_.tenant_id=? and this_.authority=? limit ?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:46,977 [http-bio-8080-exec-7] INFO  common.UserController  - User being saved <com.moovt.audit.User@258704f4 springSecurityService=grails.plugins.springsecurity.SpringSecurityService@2c5bb455 username=jgoodrider password=Hg+3yVgXNrxpuB0aW7vd5ivQkJXgvpwS3jJr2AdA7zo= firstName=John lastName=DecidedToBeADriver phone=773-329-1784 email=jgoodrider@mtaxi.com apnsToken=null enabled=true accountExpired=false accountLocked=false passwordExpired=false locale=en-US tenantname=null tenantId=2 createdBy=2 lastUpdatedBy=2 dateCreated=2013-09-20 17:37:42.0 lastUpdated=Fri Sep 20 17:37:46 CDT 2013 CRUDMessage=null errors=grails.validation.ValidationErrors: 0 errors id=6 version=1 passenger=com.moovt.taxi.Passenger : 6 driver=com.moovt.taxi.Driver : 6>

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: insert into user_role (created_by, date_created, last_updated, last_updated_by, tenant_id, role_id, user_id) values (?, ?, ?, ?, ?, ?, ?)
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"User jgoodrider updated"}, "user":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}}}
================================================================================
#
--Output from testRetrieveAllUsersrEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "MTaxi", "username": "admin", "password":"911admin","locale":"en_US"}
				
================================================================================
2013-09-20 17:37:47,064 [http-bio-8080-exec-9] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname": "MTaxi", "username": "admin", "password":"911admin","locale":"en_US"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Hibernate: select role0_.id as id6_0_, role0_.version as version6_0_, role0_.authority as authority6_0_, role0_.created_by as created4_6_0_, role0_.date_created as date5_6_0_, role0_.last_updated as last6_6_0_, role0_.last_updated_by as last7_6_0_, role0_.tenant_id as tenant8_6_0_ from role role0_ where role0_.id=?
2013-09-20 17:37:47,083 [http-bio-8080-exec-9] INFO  common.LoginController  - User has been successfully authenticated [ROLE_ADMIN]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"E4B564587E45E924CB37C1FD2D6CB1FC","userType":"NO_TYPE"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/user/retrieveAllUsers parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{}
				
================================================================================
2013-09-20 17:37:47,130 [http-bio-8080-exec-10] INFO  common.UserController  - retrieveAllUsers params are: [action:retrieveAllUsers, controller:user] and model is : 
				{}
				

Hibernate: select tenant0_.id as id1_0_, tenant0_.version as version1_0_, tenant0_.created_by as created3_1_0_, tenant0_.date_created as date4_1_0_, tenant0_.last_updated as last5_1_0_, tenant0_.last_updated_by as last6_1_0_, tenant0_.name as name1_0_ from tenant tenant0_ where tenant0_.id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where (this_.tenant_id=?) order by this_.last_updated desc
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"users":[{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},{"id":19,"version":1,"username":"testToken","firstName":"John","lastName":"TestToken","phone":"773-329-1784","email":"testToken@moovt.com","passenger":{}},{"id":10,"version":2,"username":"wheatonCityDriverUser","firstName":"John","lastName":"OldWeathon","phone":"773-329-1784","email":"oldWheaton@mtaxi.com","driver":{"servedLocation":{"locationName":"Functional Test Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":18,"version":0,"username":"jKeepApnsToken","firstName":"JKeepApnsToken","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":7,"version":0,"username":"jgoodarm","firstName":"John","lastName":"Goodarm","phone":"800-800-2020","email":"jgoodarm@mtaxi.com","driver":{"servedLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":8,"version":0,"username":"jspeedy","firstName":"John","lastName":"Speedy","phone":"800-800-2020","email":"jspeedy@mtaxi.com","driver":{"servedLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":9,"version":0,"username":"napervilleCityDriverUser","firstName":"napervilleCityDriverUser","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":11,"version":0,"username":"auroraCityDriverUser","firstName":"auroraCityDriverUser","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Aurora","politicalName":"Illinois, United States","latitude":41.7605849,"longitude":-88.32007150000001,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":12,"version":0,"username":"plainfieldCityDriverUser","firstName":"plainfieldCityDriverUser","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Plainfield","politicalName":"Illinois, United States","latitude":41.632223,"longitude":-88.2120315,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":13,"version":0,"username":"detroitCityDriverUser","firstName":"detroitCityDriverUser","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Detroit","politicalName":"Michigan, United States","latitude":42.331427,"longitude":-83.0457538,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":14,"version":0,"username":"contagemCityDriverUser","firstName":"contagemCityDriverUser","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Contagem","politicalName":"Minas Gerais, Brazil","latitude":-19.9385599,"longitude":-44.0529377,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":15,"version":0,"username":"vespasianoCityDriverUser","firstName":"vespasianoCityDriverUser","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Vespasiano","politicalName":"Minas Gerais, Brazil","latitude":-19.6933911,"longitude":-43.913722,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":16,"version":0,"username":"carmoDoCajuruCityDriverUser","firstName":"carmoDoCajuruCityDriverUser","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Carmo do Cajuru","politicalName":"Minas Gerais, Brazil","latitude":-20.1870332,"longitude":-44.7731276,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":17,"version":0,"username":"jWillGainApnsToken","firstName":"JWillGainApnsToken","lastName":"Goodarm","phone":"800-800-2020","email":"egoncalves@moovt.com","driver":{"servedLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},{"id":2,"version":0,"username":"admin","firstName":"Moovt","lastName":"Taxi","phone":"800-800-8080","email":"mtaxi@moovt.com"}]}
================================================================================
#
--Output from testGetCarTypeEnumPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/driver/getCarTypeEnum parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{}
				
================================================================================
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"carTypes":[{"code":"A_SEDAN","description":"Sedan"},{"code":"B_VAN","description":"Van"},{"code":"C_LIMO","description":"Limo"}]}
================================================================================
#
--Output from testRetrieveLoggedUserDetailsIdEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1",locale:"pt_BR"}
				
================================================================================
2013-09-20 17:37:47,779 [http-bio-8080-exec-6] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1",locale:"pt_BR"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:47,805 [http-bio-8080-exec-6] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER, ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"14340B8FF91D20792CE5F263A4992C30","userType":"PASSENGER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/user/retrieveLoggedUserDetails parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{}
				
================================================================================
2013-09-20 17:37:47,854 [http-bio-8080-exec-6] INFO  common.UserController  - retrieveLoggedUserDetails params are: [action:retrieveLoggedUserDetails, controller:user] and model is : 
				{}
				

Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"user":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}}}
================================================================================
#
--Output from testGetCarTypeEnumEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/driver/getCarTypeEnum parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{}
				
================================================================================
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"carTypes":[{"code":"A_SEDAN","description":"Sedan"},{"code":"B_VAN","description":"Van"},{"code":"C_LIMO","description":"Limo"}]}
================================================================================
#
--Output from testCreateUserPassengerEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname":"MTaxi","firstName":"John","lastName":"Airjunkie","username":"jairjunkie","password":"Welcome!1","phone":"773-329-1784","email":"jairjunkie@mtaxi.com","locale":"en-US","passenger":{}}}
				
================================================================================
2013-09-20 17:37:47,998 [http-bio-8080-exec-7] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname":"MTaxi","firstName":"John","lastName":"Airjunkie","username":"jairjunkie","password":"Welcome!1","phone":"773-329-1784","email":"jairjunkie@mtaxi.com","locale":"en-US","passenger":{}}}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:48,003 [http-bio-8080-exec-7] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: insert into user (version, account_expired, account_locked, apns_token, created_by, date_created, email, enabled, first_name, last_name, last_updated, last_updated_by, locale, `password`, password_expired, phone, tenant_id, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.authority as authority6_0_, this_.created_by as created4_6_0_, this_.date_created as date5_6_0_, this_.last_updated as last6_6_0_, this_.last_updated_by as last7_6_0_, this_.tenant_id as tenant8_6_0_ from role this_ where this_.tenant_id=? and this_.authority=? limit ?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: insert into passenger (version, created_by, date_created, last_updated, last_updated_by, tenant_id, user_id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into user_role (created_by, date_created, last_updated, last_updated_by, tenant_id, role_id, user_id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"User jairjunkie created"}, "additionalInfo":{"JSESSIONID":"6C8B1162635B4619039547913F62FFD6"}}
================================================================================
#
--Output from testGetActiveStatusEnumPortugues--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/driver/getActiveStatusEnum parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{}
				
================================================================================
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"activeStatuses":[{"code":"ENABLED","description":"Ativo"},{"code":"DISABLED","description":"Inativo"}]}
================================================================================
#
--Output from testGetActiveStatusEnumEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/driver/getActiveStatusEnum parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{}
				
================================================================================
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"activeStatuses":[{"code":"ENABLED","description":"Enabled"},{"code":"DISABLED","description":"Disabled"}]}
================================================================================
#
--Output from testCreateUserDriverEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname":"MTaxi","firstName":"David","lastName":"Ultrafast","username":"dultrafast","password":"Welcome!1","phone":"773-329-1784","email":"dultrafast@mtaxi.com","locale":"en-US","driver":{"carType" : {"code" : "A_SEDAN","description" : "Sedan"},"servedLocation":{"locationName":"ARua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"activeStatus":{"code" : "ENABLED"}}}
				
================================================================================
2013-09-20 17:37:48,275 [http-bio-8080-exec-1] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname":"MTaxi","firstName":"David","lastName":"Ultrafast","username":"dultrafast","password":"Welcome!1","phone":"773-329-1784","email":"dultrafast@mtaxi.com","locale":"en-US","driver":{"carType" : {"code" : "A_SEDAN","description" : "Sedan"},"servedLocation":{"locationName":"ARua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"activeStatus":{"code" : "ENABLED"}}}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:48,279 [http-bio-8080-exec-1] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: insert into user (version, account_expired, account_locked, apns_token, created_by, date_created, email, enabled, first_name, last_name, last_updated, last_updated_by, locale, `password`, password_expired, phone, tenant_id, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
Hibernate: insert into location (version, created_by, date_created, last_updated, last_updated_by, latitude, location_name, location_type, longitude, political_name, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.authority as authority6_0_, this_.created_by as created4_6_0_, this_.date_created as date5_6_0_, this_.last_updated as last6_6_0_, this_.last_updated_by as last7_6_0_, this_.tenant_id as tenant8_6_0_ from role this_ where this_.tenant_id=? and this_.authority=? limit ?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: insert into driver (version, active_status, car_type, created_by, date_created, last_updated, last_updated_by, served_location_id, tenant_id, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into user_role (created_by, date_created, last_updated, last_updated_by, tenant_id, role_id, user_id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"User dultrafast created"}, "additionalInfo":{"JSESSIONID":"14A5CDB6D9ED985A6BFCC1D6ED6B2AB8"}}
================================================================================
#
--Output from testRetrieveUserDetailByIdEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "MTaxi", "username": "admin", "password":"911admin","locale":"en_US"}
				
================================================================================
2013-09-20 17:37:48,434 [http-bio-8080-exec-10] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname": "MTaxi", "username": "admin", "password":"911admin","locale":"en_US"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:48,452 [http-bio-8080-exec-10] INFO  common.LoginController  - User has been successfully authenticated [ROLE_ADMIN]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"473467AC23264B486763EBA36B9DFEB2","userType":"NO_TYPE"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/user/retrieveUserDetailById parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"id":"6"}
				
================================================================================
2013-09-20 17:37:48,521 [http-bio-8080-exec-10] INFO  common.UserController  - retrieveUserDetailById params are: [action:retrieveUserDetailById, controller:user] and model is : 
				{"id":"6"}
				

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where (this_.id=?) order by this_.last_updated desc
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"user":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}}}
================================================================================
#
]]></system-out>

      <system-err><![CDATA[--Output from testUpdateUserDriverEnglish--
--Output from testCreateUserPassengerWithTokenEnglish--
--Output from testUpdateUserPassengerEnglish--
--Output from testRetrieveAllUsersrEnglish--
--Output from testGetCarTypeEnumPortuguese--
--Output from testRetrieveLoggedUserDetailsIdEnglish--
--Output from testGetCarTypeEnumEnglish--
--Output from testCreateUserPassengerEnglish--
--Output from testGetActiveStatusEnumPortugues--
--Output from testGetActiveStatusEnumEnglish--
--Output from testCreateUserDriverEnglish--
--Output from testRetrieveUserDetailByIdEnglish--
]]></system-err>

  </testsuite>
  <testsuite errors="0" failures="0" hostname="Eduardo-Goncalvess-MacBook-Pro.local" id="1" name="LocationFunctionalTests" package="com.moovt" tests="5" time="1.705" timestamp="2013-09-20T22:37:48">
      <properties />

      <testcase classname="com.moovt.LocationFunctionalTests" name="testSearchCity" time="1.297" />

      <testcase classname="com.moovt.LocationFunctionalTests" name="testSearchStreet" time="0.123" />

      <testcase classname="com.moovt.LocationFunctionalTests" name="testSearchBadJSON" time="0.063" />

      <testcase classname="com.moovt.LocationFunctionalTests" name="testState" time="0.147" />

      <testcase classname="com.moovt.LocationFunctionalTests" name="testSearchNoLocation" time="0.065" />

      <system-out><![CDATA[--Output from testSearchCity--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/location/search parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

{"location":"Belo Horizonte, MG"}	
				
================================================================================
2013-09-20 17:37:48,698 [http-bio-8080-exec-9] INFO  taxi.LocationController  - search params are: [action:search, controller:location] and model is : 
{"location":"Belo Horizonte, MG"}	
				

2013-09-20 17:37:49,877 [http-bio-8080-exec-9] INFO  taxi.LocationController  - About to render locations (1/2)

2013-09-20 17:37:49,878 [http-bio-8080-exec-9] INFO  taxi.LocationController  - Rendering locations [{"locationName":"Belo Horizonte","politicalName":"Minas Gerais, Brazil","latitude":-19.9190677,"longitude":-43.9385747,"locationType":"APPROXIMATE"}]

2013-09-20 17:37:49,878 [http-bio-8080-exec-9] INFO  taxi.LocationController  - About to render locations (2/2)

2013-09-20 17:37:49,880 [http-bio-8080-exec-9] INFO  taxi.LocationController  - Locations rendered

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"locations":[{"locationName":"Belo Horizonte","politicalName":"Minas Gerais, Brazil","latitude":-19.9190677,"longitude":-43.9385747,"locationType":"APPROXIMATE"}]}
================================================================================
#
--Output from testSearchStreet--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/location/search parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

{"location":"Rua Major Lopes 55, Belo Horizonte, MG"}	
				
================================================================================
2013-09-20 17:37:49,921 [http-bio-8080-exec-2] INFO  taxi.LocationController  - search params are: [action:search, controller:location] and model is : 
{"location":"Rua Major Lopes 55, Belo Horizonte, MG"}	
				

2013-09-20 17:37:50,002 [http-bio-8080-exec-2] INFO  taxi.LocationController  - About to render locations (1/2)

2013-09-20 17:37:50,003 [http-bio-8080-exec-2] INFO  taxi.LocationController  - Rendering locations [{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413629,"longitude":-43.9373061,"locationType":"RANGE_INTERPOLATED"}]

2013-09-20 17:37:50,003 [http-bio-8080-exec-2] INFO  taxi.LocationController  - About to render locations (2/2)

2013-09-20 17:37:50,003 [http-bio-8080-exec-2] INFO  taxi.LocationController  - Locations rendered

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"locations":[{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413629,"longitude":-43.9373061,"locationType":"RANGE_INTERPOLATED"}]}
================================================================================
#
--Output from testSearchBadJSON--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/location/search parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

================================================================================
2013-09-20 17:37:50,048 [http-bio-8080-exec-5] INFO  taxi.LocationController  - search params are: [action:search, controller:location] and model is : 

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"A JSONObject text must begin with '{' at character 0 of "}}
================================================================================
#
--Output from testState--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/location/search parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

{"location":"MG"}	
				
================================================================================
2013-09-20 17:37:50,117 [http-bio-8080-exec-8] INFO  taxi.LocationController  - search params are: [action:search, controller:location] and model is : 
{"location":"MG"}	
				

2013-09-20 17:37:50,214 [http-bio-8080-exec-8] INFO  taxi.LocationController  - About to render locations (1/2)

2013-09-20 17:37:50,215 [http-bio-8080-exec-8] INFO  taxi.LocationController  - Rendering locations []

2013-09-20 17:37:50,215 [http-bio-8080-exec-8] INFO  taxi.LocationController  - About to render locations (2/2)

2013-09-20 17:37:50,215 [http-bio-8080-exec-8] INFO  taxi.LocationController  - Locations rendered

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"locations":[]}
================================================================================
#
--Output from testSearchNoLocation--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/location/search parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

{"thisMustBeLocation":"Rua Major Lopes 55, Belo Horizonte, MG"}				
================================================================================
2013-09-20 17:37:50,272 [http-bio-8080-exec-6] INFO  taxi.LocationController  - search params are: [action:search, controller:location] and model is : 
{"thisMustBeLocation":"Rua Major Lopes 55, Belo Horizonte, MG"}				

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"Input JSON must contain a location element"}}{"result":{"type":"SYSTEM","code":"ERROR","message":"Unable to call googlemaps null"}}
================================================================================
#
]]></system-out>

      <system-err><![CDATA[--Output from testSearchCity--
--Output from testSearchStreet--
--Output from testSearchBadJSON--
2013-09-20 17:37:50,065 [http-bio-8080-exec-5] ERROR moovt.HandlerService  - A generic exception occurred A JSONObject text must begin with '{' at character 0 of 

--Output from testState--
--Output from testSearchNoLocation--
2013-09-20 17:37:50,284 [http-bio-8080-exec-6] ERROR moovt.HandlerService  - A generic exception occurred Unable to call googlemaps null

]]></system-err>

  </testsuite>
  <testsuite errors="0" failures="0" hostname="Eduardo-Goncalvess-MacBook-Pro.local" id="2" name="LoginFunctionalTests" package="com.moovt" tests="15" time="1.088" timestamp="2013-09-20T22:37:50">
      <properties />

      <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginBadMessage" time="0.041" />

      <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginSuccessEnglish" time="0.074" />

      <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginSuccessPortuguese" time="0.08" />

      <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginNoTenantEnglish" time="0.047" />

      <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginNoTenantPortuguese" time="0.047" />

      <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginTenantNotFoundEnglish" time="0.061" />

      <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginTenantNotFoundPortuguese" time="0.091" />

      <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginNoPasswordEnglish" time="0.099" />

      <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginNoUsernamedEnglish" time="0.074" />

      <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginFailedEnglish" time="0.117" />

      <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginNoPasswordPortuguese" time="0.072" />

      <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginNoUsernamedPortuguese" time="0.06" />

      <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginFailedPortuguese" time="0.058" />

      <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginWithApnsToken" time="0.07" />

      <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginKeepApnsToken" time="0.068" />

      <system-out><![CDATA[--Output from testLoginBadMessage--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

================================================================================
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"A JSONObject text must begin with '{' at character 0 of "}}
================================================================================
#
--Output from testLoginSuccessEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:50,380 [http-bio-8080-exec-6] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:50,408 [http-bio-8080-exec-6] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER, ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"AC1D53027476A0D3550CCAE545B3B8C9","userType":"PASSENGER"}}
================================================================================
#
--Output from testLoginSuccessPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:50,457 [http-bio-8080-exec-8] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:50,487 [http-bio-8080-exec-8] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER, ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login bem sucedido."}, "additionalInfo":{"JSESSIONID":"6783EF6D8C2668BEA2EB877F9BE752AF","userType":"PASSENGER"}}
================================================================================
#
--Output from testLoginNoTenantEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "", "username": "admin", "password":"admin"}
				
================================================================================
2013-09-20 17:37:50,532 [http-bio-8080-exec-6] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname": "", "username": "admin", "password":"admin"}
				

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"Authentication failed because no company was provided. Please enter a company."}}
================================================================================
#
--Output from testLoginNoTenantPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "", "username": "admin", "password":"admin"}
				
================================================================================
2013-09-20 17:37:50,586 [http-bio-8080-exec-8] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname": "", "username": "admin", "password":"admin"}
				

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"A companhia deve ser preenchida."}}
================================================================================
#
--Output from testLoginTenantNotFoundEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "BadTenant", "username": "admin", "password":"admin"}
				
================================================================================
2013-09-20 17:37:50,647 [http-bio-8080-exec-6] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname": "BadTenant", "username": "admin", "password":"admin"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"This company (BadTenant) was not found. Please enter a valid company name."}}
================================================================================
#
--Output from testLoginTenantNotFoundPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Charset: UTF-8
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "BadTenant", "username": "admin", "password":"admin"}
				
================================================================================
2013-09-20 17:37:50,718 [http-bio-8080-exec-8] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname": "BadTenant", "username": "admin", "password":"admin"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"Esta companhia (BadTenant) não foi encontrada."}}
================================================================================
#
--Output from testLoginNoPasswordEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "MTaxi", "username": "admin", "password":""}
				
================================================================================
2013-09-20 17:37:50,817 [http-bio-8080-exec-6] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname": "MTaxi", "username": "admin", "password":""}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"Authentication failed because no password was provided. Please enter a password."}}
================================================================================
#
--Output from testLoginNoUsernamedEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "MTaxi", "username": "", "password":"admin"}
				
================================================================================
2013-09-20 17:37:50,912 [http-bio-8080-exec-8] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname": "MTaxi", "username": "", "password":"admin"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"Authentication failed because no username was provided. Please enter a username."}}
================================================================================
#
--Output from testLoginFailedEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "MTaxi", "username": "admin", "password":"badPw"}
				
================================================================================
2013-09-20 17:37:50,983 [http-bio-8080-exec-6] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname": "MTaxi", "username": "admin", "password":"badPw"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"User name and or password is invalid. Please try again."}}
================================================================================
#
--Output from testLoginNoPasswordPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "MTaxi", "username": "admin", "password":""}
				
================================================================================
2013-09-20 17:37:51,102 [http-bio-8080-exec-8] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname": "MTaxi", "username": "admin", "password":""}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"A senha deve ser preenchida."}}
================================================================================
#
--Output from testLoginNoUsernamedPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "MTaxi", "username": "", "password":"admin"}
				
================================================================================
2013-09-20 17:37:51,171 [http-bio-8080-exec-6] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname": "MTaxi", "username": "", "password":"admin"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"O nome do usuário deve ser preenchido."}}
================================================================================
#
--Output from testLoginFailedPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "MTaxi", "username": "admin", "password":"badPw"}
				
================================================================================
2013-09-20 17:37:51,222 [http-bio-8080-exec-8] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname": "MTaxi", "username": "admin", "password":"badPw"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"Usuário e senha inválidos."}}
================================================================================
#
--Output from testLoginWithApnsToken--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jWillGainApnsToken","password":"Welcome!1","apnsToken":"9a1cd75847e20f1a27132790dfe1a0cb4107f42da1a39c019dd1a0820fc5c504"}

				
================================================================================
2013-09-20 17:37:51,288 [http-bio-8080-exec-6] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jWillGainApnsToken","password":"Welcome!1","apnsToken":"9a1cd75847e20f1a27132790dfe1a0cb4107f42da1a39c019dd1a0820fc5c504"}

				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:51,310 [http-bio-8080-exec-6] INFO  common.LoginController  - User has been successfully authenticated [ROLE_NO_ROLES]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login bem sucedido."}, "additionalInfo":{"JSESSIONID":"731C1F08AAB04135A8DF6CB0D058A55D","userType":"NO_TYPE"}}
================================================================================
#
--Output from testLoginKeepApnsToken--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jKeepApnsToken","password":"Welcome!1","apnsToken":"9a1cd75847e20f1a27132790dfe1a0cb4107f42da1a39c019dd1a0820fc5c504"}

				
================================================================================
2013-09-20 17:37:51,365 [http-bio-8080-exec-8] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jKeepApnsToken","password":"Welcome!1","apnsToken":"9a1cd75847e20f1a27132790dfe1a0cb4107f42da1a39c019dd1a0820fc5c504"}

				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:51,381 [http-bio-8080-exec-8] INFO  common.LoginController  - User has been successfully authenticated [ROLE_NO_ROLES]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login bem sucedido."}, "additionalInfo":{"JSESSIONID":"F8206894318730F325BE61B52A05E987","userType":"NO_TYPE"}}
================================================================================
#
]]></system-out>

      <system-err><![CDATA[--Output from testLoginBadMessage--
2013-09-20 17:37:50,336 [http-bio-8080-exec-8] ERROR moovt.HandlerService  - A generic exception occurred A JSONObject text must begin with '{' at character 0 of 

--Output from testLoginSuccessEnglish--
--Output from testLoginSuccessPortuguese--
--Output from testLoginNoTenantEnglish--
--Output from testLoginNoTenantPortuguese--
--Output from testLoginTenantNotFoundEnglish--
--Output from testLoginTenantNotFoundPortuguese--
--Output from testLoginNoPasswordEnglish--
--Output from testLoginNoUsernamedEnglish--
--Output from testLoginFailedEnglish--
--Output from testLoginNoPasswordPortuguese--
--Output from testLoginNoUsernamedPortuguese--
--Output from testLoginFailedPortuguese--
--Output from testLoginWithApnsToken--
--Output from testLoginKeepApnsToken--
]]></system-err>

  </testsuite>
  <testsuite errors="0" failures="0" hostname="Eduardo-Goncalvess-MacBook-Pro.local" id="3" name="RideFunctionalTests" package="com.moovt" tests="18" time="3.379" timestamp="2013-09-20T22:37:51">
      <properties />

      <testcase classname="com.moovt.RideFunctionalTests" name="testRetrieveAssignedRidesEnglish" time="0.224" />

      <testcase classname="com.moovt.RideFunctionalTests" name="testCancelRideSuccessEnglish" time="0.141" />

      <testcase classname="com.moovt.RideFunctionalTests" name="testCloseRideSuccessPortuguese" time="0.177" />

      <testcase classname="com.moovt.RideFunctionalTests" name="testCloseRideBadMessage" time="0.211" />

      <testcase classname="com.moovt.RideFunctionalTests" name="testCloneRideBadMessage" time="0.126" />

      <testcase classname="com.moovt.RideFunctionalTests" name="testCloseRideSuccessEnglish" time="0.222" />

      <testcase classname="com.moovt.RideFunctionalTests" name="testCancelRideSuccessPortuguese" time="0.107" />

      <testcase classname="com.moovt.RideFunctionalTests" name="testCancelRideNotFoundEnglish" time="0.095" />

      <testcase classname="com.moovt.RideFunctionalTests" name="testCancelRideNotFoundPortuguese" time="0.093" />

      <testcase classname="com.moovt.RideFunctionalTests" name="testCloseRideAlreadyClosed" time="0.103" />

      <testcase classname="com.moovt.RideFunctionalTests" name="testCloseRideUnsassignedError" time="0.102" />

      <testcase classname="com.moovt.RideFunctionalTests" name="testRetrieveAllRidesEnglish" time="0.277" />

      <testcase classname="com.moovt.RideFunctionalTests" name="testRetrievePassengerRidesEnglish" time="0.374" />

      <testcase classname="com.moovt.RideFunctionalTests" name="testRetrieveUnassignedRideInServedAreaEnglish" time="0.234" />

      <testcase classname="com.moovt.RideFunctionalTests" name="testRetrieveUnassignedRideInServedAreaNoRideFoundEnglish" time="0.134" />

      <testcase classname="com.moovt.RideFunctionalTests" name="testAssignRideToDriverEnglish" time="0.189" />

      <testcase classname="com.moovt.RideFunctionalTests" name="testCloneRide" time="0.156" />

      <testcase classname="com.moovt.RideFunctionalTests" name="testCreateRideENglish" time="0.389" />

      <system-out><![CDATA[--Output from testRetrieveAssignedRidesEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

                        {"type":"Self","tenantname":"MTaxi","username":"jgoodarm","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:51,435 [http-bio-8080-exec-6] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
                        {"type":"Self","tenantname":"MTaxi","username":"jgoodarm","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:51,457 [http-bio-8080-exec-6] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"25722A4C538A5E402E84A5B00F5F8237","userType":"DRIVER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/retrieveAssignedRides parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{}
				
================================================================================
2013-09-20 17:37:51,514 [http-bio-8080-exec-28] INFO  taxi.RideController  - retrieveAssignedRides params are: [action:retrieveAssignedRides, controller:ride] and model is : 
				{}
				

Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select this_.id as id9_0_, this_.version as version9_0_, this_.car_type as car3_9_0_, this_.comments as comments9_0_, this_.created_by as created5_9_0_, this_.date_created as date6_9_0_, this_.driver_id as driver7_9_0_, this_.drop_off_location_id as drop8_9_0_, this_.last_updated as last9_9_0_, this_.last_updated_by as last10_9_0_, this_.message_to_the_driver as message11_9_0_, this_.passenger_id as passenger12_9_0_, this_.pick_up_location_id as pick13_9_0_, this_.pick_up_location_complement as pick14_9_0_, this_.pickup_date_time as pickup15_9_0_, this_.rating as rating9_0_, this_.ride_status as ride17_9_0_, this_.tenant_id as tenant18_9_0_ from ride this_ where (this_.driver_id=?) order by this_.last_updated asc
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"rides":[{"id":2,"version":0,"rideStatus":{"code":"ASSIGNED","description":"Assigned"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":{"id":7,"version":0,"username":"jgoodarm","firstName":"John","lastName":"Goodarm","phone":"800-800-2020","email":"jgoodarm@mtaxi.com","driver":{"servedLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Functional Test Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":null,"comments":null,"pickUpLocationComplement":"Close to Vest Ride 2","messageToTheDriver":"Please come fast ride 2"},{"id":4,"version":0,"rideStatus":{"code":"ASSIGNED","description":"Assigned"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":{"id":7,"version":0,"username":"jgoodarm","firstName":"John","lastName":"Goodarm","phone":"800-800-2020","email":"jgoodarm@mtaxi.com","driver":{"servedLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Contagem","politicalName":"Minas Gerais, Brazil","latitude":-19.9385599,"longitude":-44.0529377,"locationType":"APPROXIMATE"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":null,"comments":null,"pickUpLocationComplement":null,"messageToTheDriver":null}]}
================================================================================
#
--Output from testCancelRideSuccessEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:51,673 [http-bio-8080-exec-6] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:51,694 [http-bio-8080-exec-6] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER, ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"74E74F9E5BF34FE2A40358F42BF521EB","userType":"PASSENGER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/cancelRide parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"id":"6","version":"1"}
				
================================================================================
2013-09-20 17:37:51,727 [http-bio-8080-exec-29] INFO  taxi.RideController  - cancelRide params are: [action:cancelRide, controller:ride] and model is : 
				{"id":"6","version":"1"}
				

Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select ride0_.id as id9_0_, ride0_.version as version9_0_, ride0_.car_type as car3_9_0_, ride0_.comments as comments9_0_, ride0_.created_by as created5_9_0_, ride0_.date_created as date6_9_0_, ride0_.driver_id as driver7_9_0_, ride0_.drop_off_location_id as drop8_9_0_, ride0_.last_updated as last9_9_0_, ride0_.last_updated_by as last10_9_0_, ride0_.message_to_the_driver as message11_9_0_, ride0_.passenger_id as passenger12_9_0_, ride0_.pick_up_location_id as pick13_9_0_, ride0_.pick_up_location_complement as pick14_9_0_, ride0_.pickup_date_time as pickup15_9_0_, ride0_.rating as rating9_0_, ride0_.ride_status as ride17_9_0_, ride0_.tenant_id as tenant18_9_0_ from ride ride0_ where ride0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: update ride set version=?, car_type=?, comments=?, created_by=?, date_created=?, driver_id=?, drop_off_location_id=?, last_updated=?, last_updated_by=?, message_to_the_driver=?, passenger_id=?, pick_up_location_id=?, pick_up_location_complement=?, pickup_date_time=?, rating=?, ride_status=?, tenant_id=? where id=? and version=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Ride #6 canceled."}}
================================================================================
#
--Output from testCloseRideSuccessPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:51,797 [http-bio-8080-exec-6] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:51,818 [http-bio-8080-exec-6] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER, ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"6D49439FB77D8BC7D3983745D873B75A","userType":"PASSENGER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/closeRide parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"id":"2","version":"1","rating":"5","comments":"Bom motorista"}
				
================================================================================
2013-09-20 17:37:51,855 [http-bio-8080-exec-30] INFO  taxi.RideController  - closeRide params are: [action:closeRide, controller:ride] and model is : 
				{"id":"2","version":"1","rating":"5","comments":"Bom motorista"}
				

Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select ride0_.id as id9_0_, ride0_.version as version9_0_, ride0_.car_type as car3_9_0_, ride0_.comments as comments9_0_, ride0_.created_by as created5_9_0_, ride0_.date_created as date6_9_0_, ride0_.driver_id as driver7_9_0_, ride0_.drop_off_location_id as drop8_9_0_, ride0_.last_updated as last9_9_0_, ride0_.last_updated_by as last10_9_0_, ride0_.message_to_the_driver as message11_9_0_, ride0_.passenger_id as passenger12_9_0_, ride0_.pick_up_location_id as pick13_9_0_, ride0_.pick_up_location_complement as pick14_9_0_, ride0_.pickup_date_time as pickup15_9_0_, ride0_.rating as rating9_0_, ride0_.ride_status as ride17_9_0_, ride0_.tenant_id as tenant18_9_0_ from ride ride0_ where ride0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: update ride set version=?, car_type=?, comments=?, created_by=?, date_created=?, driver_id=?, drop_off_location_id=?, last_updated=?, last_updated_by=?, message_to_the_driver=?, passenger_id=?, pick_up_location_id=?, pick_up_location_complement=?, pickup_date_time=?, rating=?, ride_status=?, tenant_id=? where id=? and version=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Corrida 2 atualizado"}}
================================================================================
#
--Output from testCloseRideBadMessage--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:51,973 [http-bio-8080-exec-6] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:51,992 [http-bio-8080-exec-6] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER, ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"13B0CDD7586982229CEAD9B43037C2AE","userType":"PASSENGER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/closeRide parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"id":"3","version":"1"}
				
================================================================================
2013-09-20 17:37:52,143 [http-bio-8080-exec-31] INFO  taxi.RideController  - closeRide params are: [action:closeRide, controller:ride] and model is : 
				{"id":"3","version":"1"}
				

Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"JSONObject[\"rating\"] not found."}}
================================================================================
#
--Output from testCloneRideBadMessage--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:52,188 [http-bio-8080-exec-6] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:52,224 [http-bio-8080-exec-6] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER, ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"F7C6719934711B15045FE0D9E3DB0929","userType":"PASSENGER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/cloneRide parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

{"idx":"5"}
				
================================================================================
2013-09-20 17:37:52,266 [http-bio-8080-exec-6] INFO  taxi.RideController  - cloneRide params are: [action:cloneRide, controller:ride] and model is : 
{"idx":"5"}
				

Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"JSONObject[\"id\"] not found."}}
================================================================================
#
--Output from testCloseRideSuccessEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:52,321 [http-bio-8080-exec-10] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:52,348 [http-bio-8080-exec-10] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER, ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"CE7DDDFE17106A49BD993515A7D3582F","userType":"PASSENGER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/closeRide parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"id":"4","version":"1","rating":"5","comments":"Great ride!"}
				
================================================================================
2013-09-20 17:37:52,387 [http-bio-8080-exec-10] INFO  taxi.RideController  - closeRide params are: [action:closeRide, controller:ride] and model is : 
				{"id":"4","version":"1","rating":"5","comments":"Great ride!"}
				

Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select ride0_.id as id9_0_, ride0_.version as version9_0_, ride0_.car_type as car3_9_0_, ride0_.comments as comments9_0_, ride0_.created_by as created5_9_0_, ride0_.date_created as date6_9_0_, ride0_.driver_id as driver7_9_0_, ride0_.drop_off_location_id as drop8_9_0_, ride0_.last_updated as last9_9_0_, ride0_.last_updated_by as last10_9_0_, ride0_.message_to_the_driver as message11_9_0_, ride0_.passenger_id as passenger12_9_0_, ride0_.pick_up_location_id as pick13_9_0_, ride0_.pick_up_location_complement as pick14_9_0_, ride0_.pickup_date_time as pickup15_9_0_, ride0_.rating as rating9_0_, ride0_.ride_status as ride17_9_0_, ride0_.tenant_id as tenant18_9_0_ from ride ride0_ where ride0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: update ride set version=?, car_type=?, comments=?, created_by=?, date_created=?, driver_id=?, drop_off_location_id=?, last_updated=?, last_updated_by=?, message_to_the_driver=?, passenger_id=?, pick_up_location_id=?, pick_up_location_complement=?, pickup_date_time=?, rating=?, ride_status=?, tenant_id=? where id=? and version=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Ride 4 updated"}}
================================================================================
#
--Output from testCancelRideSuccessPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:52,536 [http-bio-8080-exec-7] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:52,559 [http-bio-8080-exec-7] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER, ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"951A228F3B719057DCD2CC7FBA699286","userType":"PASSENGER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/cancelRide parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"id":"7","version":"1"}
				
================================================================================
2013-09-20 17:37:52,593 [http-bio-8080-exec-7] INFO  taxi.RideController  - cancelRide params are: [action:cancelRide, controller:ride] and model is : 
				{"id":"7","version":"1"}
				

Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select ride0_.id as id9_0_, ride0_.version as version9_0_, ride0_.car_type as car3_9_0_, ride0_.comments as comments9_0_, ride0_.created_by as created5_9_0_, ride0_.date_created as date6_9_0_, ride0_.driver_id as driver7_9_0_, ride0_.drop_off_location_id as drop8_9_0_, ride0_.last_updated as last9_9_0_, ride0_.last_updated_by as last10_9_0_, ride0_.message_to_the_driver as message11_9_0_, ride0_.passenger_id as passenger12_9_0_, ride0_.pick_up_location_id as pick13_9_0_, ride0_.pick_up_location_complement as pick14_9_0_, ride0_.pickup_date_time as pickup15_9_0_, ride0_.rating as rating9_0_, ride0_.ride_status as ride17_9_0_, ride0_.tenant_id as tenant18_9_0_ from ride ride0_ where ride0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: update ride set version=?, car_type=?, comments=?, created_by=?, date_created=?, driver_id=?, drop_off_location_id=?, last_updated=?, last_updated_by=?, message_to_the_driver=?, passenger_id=?, pick_up_location_id=?, pick_up_location_complement=?, pickup_date_time=?, rating=?, ride_status=?, tenant_id=? where id=? and version=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Corrida #7 cancelada."}}
================================================================================
#
--Output from testCancelRideNotFoundEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:52,652 [http-bio-8080-exec-3] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:52,670 [http-bio-8080-exec-3] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER, ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"BD8D673B237D818B2826A0F40C55DA0D","userType":"PASSENGER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/cancelRide parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"id":"40","version":"1"}
				
================================================================================
2013-09-20 17:37:52,701 [http-bio-8080-exec-3] INFO  taxi.RideController  - cancelRide params are: [action:cancelRide, controller:ride] and model is : 
				{"id":"40","version":"1"}
				

Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select ride0_.id as id9_0_, ride0_.version as version9_0_, ride0_.car_type as car3_9_0_, ride0_.comments as comments9_0_, ride0_.created_by as created5_9_0_, ride0_.date_created as date6_9_0_, ride0_.driver_id as driver7_9_0_, ride0_.drop_off_location_id as drop8_9_0_, ride0_.last_updated as last9_9_0_, ride0_.last_updated_by as last10_9_0_, ride0_.message_to_the_driver as message11_9_0_, ride0_.passenger_id as passenger12_9_0_, ride0_.pick_up_location_id as pick13_9_0_, ride0_.pick_up_location_complement as pick14_9_0_, ride0_.pickup_date_time as pickup15_9_0_, ride0_.rating as rating9_0_, ride0_.ride_status as ride17_9_0_, ride0_.tenant_id as tenant18_9_0_ from ride ride0_ where ride0_.id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"Ride #40 not found"}}
================================================================================
#
--Output from testCancelRideNotFoundPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:52,742 [http-bio-8080-exec-26] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:52,760 [http-bio-8080-exec-26] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER, ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"4C2DB9FAE0D926C9787CB40CE8CB6EBB","userType":"PASSENGER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/cancelRide parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"id":"40","version":"1"}
				
================================================================================
2013-09-20 17:37:52,796 [http-bio-8080-exec-26] INFO  taxi.RideController  - cancelRide params are: [action:cancelRide, controller:ride] and model is : 
				{"id":"40","version":"1"}
				

Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select ride0_.id as id9_0_, ride0_.version as version9_0_, ride0_.car_type as car3_9_0_, ride0_.comments as comments9_0_, ride0_.created_by as created5_9_0_, ride0_.date_created as date6_9_0_, ride0_.driver_id as driver7_9_0_, ride0_.drop_off_location_id as drop8_9_0_, ride0_.last_updated as last9_9_0_, ride0_.last_updated_by as last10_9_0_, ride0_.message_to_the_driver as message11_9_0_, ride0_.passenger_id as passenger12_9_0_, ride0_.pick_up_location_id as pick13_9_0_, ride0_.pick_up_location_complement as pick14_9_0_, ride0_.pickup_date_time as pickup15_9_0_, ride0_.rating as rating9_0_, ride0_.ride_status as ride17_9_0_, ride0_.tenant_id as tenant18_9_0_ from ride ride0_ where ride0_.id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"Corrida #40 não foi encontrada."}}
================================================================================
#
--Output from testCloseRideAlreadyClosed--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:52,836 [http-bio-8080-exec-24] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:52,859 [http-bio-8080-exec-24] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER, ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"432C5D620125874781D6988F03DB9835","userType":"PASSENGER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/closeRide parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================
	
				{"id":"5","version":"1","rating":"5","comments":"Great ride!"}
				
================================================================================
2013-09-20 17:37:52,898 [http-bio-8080-exec-24] INFO  taxi.RideController  - closeRide params are: [action:closeRide, controller:ride] and model is : 	
				{"id":"5","version":"1","rating":"5","comments":"Great ride!"}
				

Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select ride0_.id as id9_0_, ride0_.version as version9_0_, ride0_.car_type as car3_9_0_, ride0_.comments as comments9_0_, ride0_.created_by as created5_9_0_, ride0_.date_created as date6_9_0_, ride0_.driver_id as driver7_9_0_, ride0_.drop_off_location_id as drop8_9_0_, ride0_.last_updated as last9_9_0_, ride0_.last_updated_by as last10_9_0_, ride0_.message_to_the_driver as message11_9_0_, ride0_.passenger_id as passenger12_9_0_, ride0_.pick_up_location_id as pick13_9_0_, ride0_.pick_up_location_complement as pick14_9_0_, ride0_.pickup_date_time as pickup15_9_0_, ride0_.rating as rating9_0_, ride0_.ride_status as ride17_9_0_, ride0_.tenant_id as tenant18_9_0_ from ride ride0_ where ride0_.id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"This ride has already been completed. Unable to add comment."}}
================================================================================
#
--Output from testCloseRideUnsassignedError--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:52,941 [http-bio-8080-exec-21] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:52,960 [http-bio-8080-exec-21] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER, ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"D90EAA63BB61C1DF884611BF5D8F2473","userType":"PASSENGER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/closeRide parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"id":"8","version":"1","rating":"5","comments":"Great ride!"}
				
================================================================================
2013-09-20 17:37:52,999 [http-bio-8080-exec-21] INFO  taxi.RideController  - closeRide params are: [action:closeRide, controller:ride] and model is : 
				{"id":"8","version":"1","rating":"5","comments":"Great ride!"}
				

Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select ride0_.id as id9_0_, ride0_.version as version9_0_, ride0_.car_type as car3_9_0_, ride0_.comments as comments9_0_, ride0_.created_by as created5_9_0_, ride0_.date_created as date6_9_0_, ride0_.driver_id as driver7_9_0_, ride0_.drop_off_location_id as drop8_9_0_, ride0_.last_updated as last9_9_0_, ride0_.last_updated_by as last10_9_0_, ride0_.message_to_the_driver as message11_9_0_, ride0_.passenger_id as passenger12_9_0_, ride0_.pick_up_location_id as pick13_9_0_, ride0_.pick_up_location_complement as pick14_9_0_, ride0_.pickup_date_time as pickup15_9_0_, ride0_.rating as rating9_0_, ride0_.ride_status as ride17_9_0_, ride0_.tenant_id as tenant18_9_0_ from ride ride0_ where ride0_.id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"This ride is unassigned and can't be completed."}}
================================================================================
#
--Output from testRetrieveAllRidesEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"admin","password":"911admin"}
				
================================================================================
2013-09-20 17:37:53,043 [http-bio-8080-exec-11] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"admin","password":"911admin"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:53,066 [http-bio-8080-exec-11] INFO  common.LoginController  - User has been successfully authenticated [ROLE_ADMIN]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"7043BB773AF6812200699C2A910F38E7","userType":"NO_TYPE"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/retrieveAllRides parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{}
				
================================================================================
2013-09-20 17:37:53,105 [http-bio-8080-exec-11] INFO  taxi.RideController  - retrieveAllRides params are: [action:retrieveAllRides, controller:ride] and model is : 
				{}
				

Hibernate: select this_.id as id9_0_, this_.version as version9_0_, this_.car_type as car3_9_0_, this_.comments as comments9_0_, this_.created_by as created5_9_0_, this_.date_created as date6_9_0_, this_.driver_id as driver7_9_0_, this_.drop_off_location_id as drop8_9_0_, this_.last_updated as last9_9_0_, this_.last_updated_by as last10_9_0_, this_.message_to_the_driver as message11_9_0_, this_.passenger_id as passenger12_9_0_, this_.pick_up_location_id as pick13_9_0_, this_.pick_up_location_complement as pick14_9_0_, this_.pickup_date_time as pickup15_9_0_, this_.rating as rating9_0_, this_.ride_status as ride17_9_0_, this_.tenant_id as tenant18_9_0_ from ride this_
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"rides":[{"id":1,"version":0,"rideStatus":{"code":"UNASSIGNED","description":"Unassigned"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":null,"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":null,"comments":null,"pickUpLocationComplement":"Close to Vest Ride 1","messageToTheDriver":"Please come fast ride 1"},{"id":2,"version":1,"rideStatus":{"code":"COMPLETED","description":"Completed"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":{"id":7,"version":0,"username":"jgoodarm","firstName":"John","lastName":"Goodarm","phone":"800-800-2020","email":"jgoodarm@mtaxi.com","driver":{"servedLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Functional Test Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":5,"comments":"Bom motorista","pickUpLocationComplement":"Close to Vest Ride 2","messageToTheDriver":"Please come fast ride 2"},{"id":3,"version":0,"rideStatus":{"code":"UNASSIGNED","description":"Unassigned"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":null,"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Contagem","politicalName":"Minas Gerais, Brazil","latitude":-19.9385599,"longitude":-44.0529377,"locationType":"APPROXIMATE"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":null,"comments":null,"pickUpLocationComplement":null,"messageToTheDriver":null},{"id":4,"version":1,"rideStatus":{"code":"COMPLETED","description":"Completed"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":{"id":7,"version":0,"username":"jgoodarm","firstName":"John","lastName":"Goodarm","phone":"800-800-2020","email":"jgoodarm@mtaxi.com","driver":{"servedLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Contagem","politicalName":"Minas Gerais, Brazil","latitude":-19.9385599,"longitude":-44.0529377,"locationType":"APPROXIMATE"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":5,"comments":"Great ride!","pickUpLocationComplement":null,"messageToTheDriver":null},{"id":5,"version":0,"rideStatus":{"code":"COMPLETED","description":"Completed"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":null,"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Contagem","politicalName":"Minas Gerais, Brazil","latitude":-19.9385599,"longitude":-44.0529377,"locationType":"APPROXIMATE"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":3.5,"comments":"Great Driver","pickUpLocationComplement":"Close to Vest Ride 5","messageToTheDriver":"Please come fast Ride 5"},{"id":6,"version":1,"rideStatus":{"code":"CANCELED","description":"Canceled"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":null,"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Contagem","politicalName":"Minas Gerais, Brazil","latitude":-19.9385599,"longitude":-44.0529377,"locationType":"APPROXIMATE"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":null,"comments":null,"pickUpLocationComplement":null,"messageToTheDriver":null},{"id":7,"version":1,"rideStatus":{"code":"CANCELED","description":"Canceled"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":null,"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Contagem","politicalName":"Minas Gerais, Brazil","latitude":-19.9385599,"longitude":-44.0529377,"locationType":"APPROXIMATE"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":null,"comments":null,"pickUpLocationComplement":null,"messageToTheDriver":null},{"id":8,"version":0,"rideStatus":{"code":"UNASSIGNED","description":"Unassigned"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":null,"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Contagem","politicalName":"Minas Gerais, Brazil","latitude":-19.9385599,"longitude":-44.0529377,"locationType":"APPROXIMATE"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":null,"comments":null,"pickUpLocationComplement":null,"messageToTheDriver":null}]}
================================================================================
#
--Output from testRetrievePassengerRidesEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:53,333 [http-bio-8080-exec-19] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:53,364 [http-bio-8080-exec-19] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER, ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"08B015FEEFB06054002CC4170A1993EE","userType":"PASSENGER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/retrievePassengerRides parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{}
				
================================================================================
2013-09-20 17:37:53,468 [http-bio-8080-exec-19] INFO  taxi.RideController  - retrievePassengerRides params are: [action:retrievePassengerRides, controller:ride] and model is : 
				{}
				

Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.id as id9_0_, this_.version as version9_0_, this_.car_type as car3_9_0_, this_.comments as comments9_0_, this_.created_by as created5_9_0_, this_.date_created as date6_9_0_, this_.driver_id as driver7_9_0_, this_.drop_off_location_id as drop8_9_0_, this_.last_updated as last9_9_0_, this_.last_updated_by as last10_9_0_, this_.message_to_the_driver as message11_9_0_, this_.passenger_id as passenger12_9_0_, this_.pick_up_location_id as pick13_9_0_, this_.pick_up_location_complement as pick14_9_0_, this_.pickup_date_time as pickup15_9_0_, this_.rating as rating9_0_, this_.ride_status as ride17_9_0_, this_.tenant_id as tenant18_9_0_ from ride this_ where (this_.passenger_id=?) order by this_.last_updated asc
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"rides":[{"id":1,"version":0,"rideStatus":{"code":"UNASSIGNED","description":"Unassigned"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":null,"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":null,"comments":null,"pickUpLocationComplement":"Close to Vest Ride 1","messageToTheDriver":"Please come fast ride 1"},{"id":3,"version":0,"rideStatus":{"code":"UNASSIGNED","description":"Unassigned"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":null,"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Contagem","politicalName":"Minas Gerais, Brazil","latitude":-19.9385599,"longitude":-44.0529377,"locationType":"APPROXIMATE"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":null,"comments":null,"pickUpLocationComplement":null,"messageToTheDriver":null},{"id":5,"version":0,"rideStatus":{"code":"COMPLETED","description":"Completed"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":null,"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Contagem","politicalName":"Minas Gerais, Brazil","latitude":-19.9385599,"longitude":-44.0529377,"locationType":"APPROXIMATE"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":3.5,"comments":"Great Driver","pickUpLocationComplement":"Close to Vest Ride 5","messageToTheDriver":"Please come fast Ride 5"},{"id":8,"version":0,"rideStatus":{"code":"UNASSIGNED","description":"Unassigned"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":null,"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Contagem","politicalName":"Minas Gerais, Brazil","latitude":-19.9385599,"longitude":-44.0529377,"locationType":"APPROXIMATE"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":null,"comments":null,"pickUpLocationComplement":null,"messageToTheDriver":null},{"id":2,"version":1,"rideStatus":{"code":"COMPLETED","description":"Completed"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":{"id":7,"version":0,"username":"jgoodarm","firstName":"John","lastName":"Goodarm","phone":"800-800-2020","email":"jgoodarm@mtaxi.com","driver":{"servedLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Functional Test Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":5,"comments":"Bom motorista","pickUpLocationComplement":"Close to Vest Ride 2","messageToTheDriver":"Please come fast ride 2"},{"id":4,"version":1,"rideStatus":{"code":"COMPLETED","description":"Completed"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":{"id":7,"version":0,"username":"jgoodarm","firstName":"John","lastName":"Goodarm","phone":"800-800-2020","email":"jgoodarm@mtaxi.com","driver":{"servedLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}}},"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Contagem","politicalName":"Minas Gerais, Brazil","latitude":-19.9385599,"longitude":-44.0529377,"locationType":"APPROXIMATE"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":5,"comments":"Great ride!","pickUpLocationComplement":null,"messageToTheDriver":null},{"id":6,"version":1,"rideStatus":{"code":"CANCELED","description":"Canceled"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":null,"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Contagem","politicalName":"Minas Gerais, Brazil","latitude":-19.9385599,"longitude":-44.0529377,"locationType":"APPROXIMATE"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":null,"comments":null,"pickUpLocationComplement":null,"messageToTheDriver":null},{"id":7,"version":1,"rideStatus":{"code":"CANCELED","description":"Canceled"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":null,"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Contagem","politicalName":"Minas Gerais, Brazil","latitude":-19.9385599,"longitude":-44.0529377,"locationType":"APPROXIMATE"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":null,"comments":null,"pickUpLocationComplement":null,"messageToTheDriver":null}]}
================================================================================
#
--Output from testRetrieveUnassignedRideInServedAreaEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jspeedy","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:53,697 [http-bio-8080-exec-16] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jspeedy","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:53,716 [http-bio-8080-exec-16] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"BD940A737523A8188A6E5FA35E1E36D7","userType":"DRIVER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/retrieveUnassignedRideInServedArea parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{}
				
================================================================================
2013-09-20 17:37:53,747 [http-bio-8080-exec-16] INFO  taxi.RideController  - retrieveUnassignedRideInServedArea params are: [action:retrieveUnassignedRideInServedArea, controller:ride] and model is : 
				{}
				

Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
2013-09-20 17:37:53,756 [http-bio-8080-exec-16] INFO  taxi.RideController  - About to compile list of nearby rides for <com.moovt.taxi.Driver@6448c51 activeStatus=ENABLED carType=B_VAN servedLocation=com.moovt.taxi.Location : 9 tenantId=2 createdBy=2 lastUpdatedBy=2 dateCreated=2013-09-20 17:37:42.0 lastUpdated=2013-09-20 17:37:42.0 CRUDMessage=null errors=null id=8 version=0 user=com.moovt.audit.User : 8>

2013-09-20 17:37:53,756 [http-bio-8080-exec-16] INFO  taxi.RideController  - The served location is <com.moovt.taxi.Location@1104c45d tenantId=2 createdBy=2 lastUpdatedBy=2 lastUpdated=2013-09-20 17:37:42.0 dateCreated=2013-09-20 17:37:42.0 locationName=Naperville politicalName=Illinois, United States latitude=41.7858629 longitude=-88.1472893 locationType=APPROXIMATE CRUDMessage=null errors=null id=9 version=0>

2013-09-20 17:37:53,758 [http-bio-8080-exec-16] INFO  taxi.RideController  - The served location is <com.moovt.taxi.Location@1104c45d tenantId=2 createdBy=2 lastUpdatedBy=2 lastUpdated=2013-09-20 17:37:42.0 dateCreated=2013-09-20 17:37:42.0 locationName=Naperville politicalName=Illinois, United States latitude=41.7858629 longitude=-88.1472893 locationType=APPROXIMATE CRUDMessage=null errors=null id=9 version=0>

2013-09-20 17:37:53,781 [http-bio-8080-exec-16] INFO  moovt.LocationService  - Finding Nearby Rides for <com.moovt.taxi.Location@1104c45d tenantId=2 createdBy=2 lastUpdatedBy=2 lastUpdated=2013-09-20 17:37:42.0 dateCreated=2013-09-20 17:37:42.0 locationName=Naperville politicalName=Illinois, United States latitude=41.7858629 longitude=-88.1472893 locationType=APPROXIMATE CRUDMessage=null errors=null id=9 version=0>

2013-09-20 17:37:53,812 [http-bio-8080-exec-16] INFO  moovt.LocationService  - <org.hibernate.impl.SQLQueryImpl@352d0f50 queryReturns=[] queryReturnBuilders=null autoDiscoverTypes=false querySpaces=null callable=false queryString=SELECT r.id as rideId, 3956 * 2 * ASIN(SQRT( POWER(SIN((:lat - latitude) * pi()/180 / 2), 2) +COS(:lat * pi()/180) * COS(latitude * pi()/180) *POWER(SIN((:lon - longitude) * pi()/180 / 2), 2) )) as distance FROM  ride r, location l WHERE r.pick_up_location_id = l.id AND r.ride_status = 'UNASSIGNED' AND l.longitude between :lon1 and :lon2 and l.latitude between :lat1 and :lat2 having distance < :dist ORDER BY distance limit 10 session=SessionImpl(PersistenceContext[entityKeys=[EntityKey[com.moovt.taxi.Driver#8], EntityKey[com.moovt.audit.User#8], EntityKey[com.moovt.taxi.Location#9]],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[]]) parameterMetadata=org.hibernate.engine.query.ParameterMetadata@63bee2d1 values=[] types=[] namedParameters=[lon:-88.1472893, lon2:-86.86447027315957, lon1:-89.43010832684043, lat:41.7858629, lat2:42.742384639130435, dist:66.0, lat1:40.82934116086956] namedParameterLists=[:] optionalObject=null optionalId=null optionalEntityName=null selection=org.hibernate.engine.RowSelection@91d3a80 cacheable=false cacheRegion=null comment=dynamic native SQL query flushMode=null cacheMode=null sessionFlushMode=null sessionCacheMode=null collectionKey=null readOnly=null resultTransformer=null>

Hibernate: SELECT r.id as rideId, 3956 * 2 * ASIN(SQRT( POWER(SIN((? - latitude) * pi()/180 / 2), 2) +COS(? * pi()/180) * COS(latitude * pi()/180) *POWER(SIN((? - longitude) * pi()/180 / 2), 2) )) as distance FROM  ride r, location l WHERE r.pick_up_location_id = l.id AND r.ride_status = 'UNASSIGNED' AND l.longitude between ? and ? and l.latitude between ? and ? having distance < ? ORDER BY distance limit 10
Hibernate: select ride0_.id as id9_0_, ride0_.version as version9_0_, ride0_.car_type as car3_9_0_, ride0_.comments as comments9_0_, ride0_.created_by as created5_9_0_, ride0_.date_created as date6_9_0_, ride0_.driver_id as driver7_9_0_, ride0_.drop_off_location_id as drop8_9_0_, ride0_.last_updated as last9_9_0_, ride0_.last_updated_by as last10_9_0_, ride0_.message_to_the_driver as message11_9_0_, ride0_.passenger_id as passenger12_9_0_, ride0_.pick_up_location_id as pick13_9_0_, ride0_.pick_up_location_complement as pick14_9_0_, ride0_.pickup_date_time as pickup15_9_0_, ride0_.rating as rating9_0_, ride0_.ride_status as ride17_9_0_, ride0_.tenant_id as tenant18_9_0_ from ride ride0_ where ride0_.id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"rides":[{"id":1,"version":0,"rideStatus":{"code":"UNASSIGNED","description":"Unassigned"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":null,"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":null,"comments":null,"pickUpLocationComplement":"Close to Vest Ride 1","messageToTheDriver":"Please come fast ride 1"}]}
================================================================================
#
--Output from testRetrieveUnassignedRideInServedAreaNoRideFoundEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"detroitCityDriverUser","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:53,933 [http-bio-8080-exec-2] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"detroitCityDriverUser","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:53,951 [http-bio-8080-exec-2] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER]

2013-09-20 17:37:53,952 [http-bio-8080-exec-2] WARN  common.LoginController  - A user has a new apns token. The user id is 13

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"D29E194910F3611DE84A72BEDED75623","userType":"DRIVER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/retrieveUnassignedRideInServedArea parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{}
				
================================================================================
2013-09-20 17:37:54,014 [http-bio-8080-exec-2] INFO  taxi.RideController  - retrieveUnassignedRideInServedArea params are: [action:retrieveUnassignedRideInServedArea, controller:ride] and model is : 
				{}
				

Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
2013-09-20 17:37:54,023 [http-bio-8080-exec-2] INFO  taxi.RideController  - About to compile list of nearby rides for <com.moovt.taxi.Driver@228c6f82 activeStatus=ENABLED carType=B_VAN servedLocation=com.moovt.taxi.Location : 4 tenantId=2 createdBy=2 lastUpdatedBy=2 dateCreated=2013-09-20 17:37:42.0 lastUpdated=2013-09-20 17:37:42.0 CRUDMessage=null errors=null id=13 version=0 user=com.moovt.audit.User : 13>

2013-09-20 17:37:54,023 [http-bio-8080-exec-2] INFO  taxi.RideController  - The served location is <com.moovt.taxi.Location@33fec442 tenantId=2 createdBy=2 lastUpdatedBy=2 lastUpdated=2013-09-20 17:37:42.0 dateCreated=2013-09-20 17:37:42.0 locationName=Detroit politicalName=Michigan, United States latitude=42.331427 longitude=-83.0457538 locationType=APPROXIMATE CRUDMessage=null errors=null id=4 version=0>

2013-09-20 17:37:54,024 [http-bio-8080-exec-2] INFO  taxi.RideController  - The served location is <com.moovt.taxi.Location@33fec442 tenantId=2 createdBy=2 lastUpdatedBy=2 lastUpdated=2013-09-20 17:37:42.0 dateCreated=2013-09-20 17:37:42.0 locationName=Detroit politicalName=Michigan, United States latitude=42.331427 longitude=-83.0457538 locationType=APPROXIMATE CRUDMessage=null errors=null id=4 version=0>

2013-09-20 17:37:54,025 [http-bio-8080-exec-2] INFO  moovt.LocationService  - Finding Nearby Rides for <com.moovt.taxi.Location@33fec442 tenantId=2 createdBy=2 lastUpdatedBy=2 lastUpdated=2013-09-20 17:37:42.0 dateCreated=2013-09-20 17:37:42.0 locationName=Detroit politicalName=Michigan, United States latitude=42.331427 longitude=-83.0457538 locationType=APPROXIMATE CRUDMessage=null errors=null id=4 version=0>

2013-09-20 17:37:54,026 [http-bio-8080-exec-2] INFO  moovt.LocationService  - <org.hibernate.impl.SQLQueryImpl@37938a7a queryReturns=[] queryReturnBuilders=null autoDiscoverTypes=false querySpaces=null callable=false queryString=SELECT r.id as rideId, 3956 * 2 * ASIN(SQRT( POWER(SIN((:lat - latitude) * pi()/180 / 2), 2) +COS(:lat * pi()/180) * COS(latitude * pi()/180) *POWER(SIN((:lon - longitude) * pi()/180 / 2), 2) )) as distance FROM  ride r, location l WHERE r.pick_up_location_id = l.id AND r.ride_status = 'UNASSIGNED' AND l.longitude between :lon1 and :lon2 and l.latitude between :lat1 and :lat2 having distance < :dist ORDER BY distance limit 10 session=SessionImpl(PersistenceContext[entityKeys=[EntityKey[com.moovt.taxi.Location#4], EntityKey[com.moovt.audit.User#13], EntityKey[com.moovt.taxi.Driver#13]],collectionKeys=[]];ActionQueue[insertions=[] updates=[] deletions=[] collectionCreations=[] collectionRemovals=[] collectionUpdates=[]]) parameterMetadata=org.hibernate.engine.query.ParameterMetadata@63bee2d1 values=[] types=[] namedParameters=[lon:-83.0457538, lon2:-81.75186617305094, lon1:-84.33964142694906, lat:42.331427, lat2:43.287948739130435, dist:66.0, lat1:41.37490526086956] namedParameterLists=[:] optionalObject=null optionalId=null optionalEntityName=null selection=org.hibernate.engine.RowSelection@37686c17 cacheable=false cacheRegion=null comment=dynamic native SQL query flushMode=null cacheMode=null sessionFlushMode=null sessionCacheMode=null collectionKey=null readOnly=null resultTransformer=null>

Hibernate: SELECT r.id as rideId, 3956 * 2 * ASIN(SQRT( POWER(SIN((? - latitude) * pi()/180 / 2), 2) +COS(? * pi()/180) * COS(latitude * pi()/180) *POWER(SIN((? - longitude) * pi()/180 / 2), 2) )) as distance FROM  ride r, location l WHERE r.pick_up_location_id = l.id AND r.ride_status = 'UNASSIGNED' AND l.longitude between ? and ? and l.latitude between ? and ? having distance < ? ORDER BY distance limit 10
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"No rides found"}}
================================================================================
#
--Output from testAssignRideToDriverEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jspeedy","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:54,114 [http-bio-8080-exec-4] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jspeedy","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:54,131 [http-bio-8080-exec-4] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"6BCD09563866436BD23885781A80A2AE","userType":"DRIVER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/assignRideToDriver parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"id":"3","version":"1"}
				
================================================================================
2013-09-20 17:37:54,170 [http-bio-8080-exec-4] INFO  taxi.RideController  - assignRideToDriver params are: [action:assignRideToDriver, controller:ride] and model is : 
				{"id":"3","version":"1"}
				

Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select ride0_.id as id9_0_, ride0_.version as version9_0_, ride0_.car_type as car3_9_0_, ride0_.comments as comments9_0_, ride0_.created_by as created5_9_0_, ride0_.date_created as date6_9_0_, ride0_.driver_id as driver7_9_0_, ride0_.drop_off_location_id as drop8_9_0_, ride0_.last_updated as last9_9_0_, ride0_.last_updated_by as last10_9_0_, ride0_.message_to_the_driver as message11_9_0_, ride0_.passenger_id as passenger12_9_0_, ride0_.pick_up_location_id as pick13_9_0_, ride0_.pick_up_location_complement as pick14_9_0_, ride0_.pickup_date_time as pickup15_9_0_, ride0_.rating as rating9_0_, ride0_.ride_status as ride17_9_0_, ride0_.tenant_id as tenant18_9_0_ from ride ride0_ where ride0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: update ride set version=?, car_type=?, comments=?, created_by=?, date_created=?, driver_id=?, drop_off_location_id=?, last_updated=?, last_updated_by=?, message_to_the_driver=?, passenger_id=?, pick_up_location_id=?, pick_up_location_complement=?, pickup_date_time=?, rating=?, ride_status=?, tenant_id=? where id=? and version=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Ride 3 updated"}}
================================================================================
#
--Output from testCloneRide--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:54,258 [http-bio-8080-exec-27] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:54,291 [http-bio-8080-exec-27] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER, ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"F4569DE76AA4AC68DE60361B0557AB9C","userType":"PASSENGER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/cloneRide parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

{"id":"5"}				
================================================================================
2013-09-20 17:37:54,329 [http-bio-8080-exec-27] INFO  taxi.RideController  - cloneRide params are: [action:cloneRide, controller:ride] and model is : 
{"id":"5"}				

Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select ride0_.id as id9_0_, ride0_.version as version9_0_, ride0_.car_type as car3_9_0_, ride0_.comments as comments9_0_, ride0_.created_by as created5_9_0_, ride0_.date_created as date6_9_0_, ride0_.driver_id as driver7_9_0_, ride0_.drop_off_location_id as drop8_9_0_, ride0_.last_updated as last9_9_0_, ride0_.last_updated_by as last10_9_0_, ride0_.message_to_the_driver as message11_9_0_, ride0_.passenger_id as passenger12_9_0_, ride0_.pick_up_location_id as pick13_9_0_, ride0_.pick_up_location_complement as pick14_9_0_, ride0_.pickup_date_time as pickup15_9_0_, ride0_.rating as rating9_0_, ride0_.ride_status as ride17_9_0_, ride0_.tenant_id as tenant18_9_0_ from ride ride0_ where ride0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"ride":{"id":null,"version":null,"rideStatus":{"code":"UNASSIGNED","description":"Unassigned"},"carType":{"code":"A_SEDAN","description":"Sedan"},"driver":null,"passenger":{"id":6,"version":1,"username":"jgoodrider","firstName":"John","lastName":"DecidedToBeADriver","phone":"773-329-1784","email":"jgoodrider@mtaxi.com","driver":{"servedLocation":{"locationName":"Rua Major Lopes, 55","politicalName":"Belo Horizonte, MG, BR","latitude":-19.9413628,"longitude":-43.9373064,"locationType":"RANGE_INTERPOLATED"},"carType":{"code":"B_VAN","description":"Van"},"activeStatus":{"code":"ENABLED","description":"Enabled"}},"passenger":{}},"pickUpDateTime":"2013-03-13 20:10","pickUpLocation":{"locationName":"Contagem","politicalName":"Minas Gerais, Brazil","latitude":-19.9385599,"longitude":-44.0529377,"locationType":"APPROXIMATE"},"dropOffLocation":{"locationName":"Naperville","politicalName":"Illinois, United States","latitude":41.7858629,"longitude":-88.1472893,"locationType":"APPROXIMATE"},"rating":3.5,"comments":"Great Driver","pickUpLocationComplement":"Close to Vest Ride 5","messageToTheDriver":"Please come fast Ride 5"}}
================================================================================
#
--Output from testCreateRideENglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				
================================================================================
2013-09-20 17:37:54,415 [http-bio-8080-exec-23] INFO  common.LoginController  - Authenticating user with params:[action:authenticateUser, controller:login]and model: 
				{"type":"Self","tenantname":"MTaxi","username":"jgoodrider","password":"Welcome!1"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
2013-09-20 17:37:54,439 [http-bio-8080-exec-23] INFO  common.LoginController  - User has been successfully authenticated [ROLE_DRIVER, ROLE_PASSENGER]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"0C9A93C3DE17271953D92F25C8E95DFA","userType":"PASSENGER"}}
================================================================================
#
== Making request POST http://localhost:8080/moovt/ride/createRide parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

{
  "id" : 0,
  "pickUpLocation" : {
    "locationName" : "Naperville",
    "longitude" : -88.14729,
    "latitude" : 41.78586,
    "politicalName" : "Illinois, United States",
    "locationType" : "APPROXIMATE"
  },
  "pickUpLocationComplement" : "",
  "comments" : "",
  "rating" : "",
  "dropOffLocation" : {
    "locationName" : "Wheaton",
    "longitude" : -88.10701,
    "latitude" : 41.86614,
    "politicalName" : "Illinois, United States",
    "locationType" : "APPROXIMATE"
  },
  "version" : 0,
  "messageToTheDriver" : "",
  "carType" : {
    "code" : "B_VAN",
    "description" : "Van"
  },
  "pickUpDateTime" : "2013-06-05 23:04"
}
				
================================================================================
2013-09-20 17:37:54,481 [http-bio-8080-exec-23] INFO  taxi.RideController  - createRide params are: [action:createRide, controller:ride] and model is : 
{
  "id" : 0,
  "pickUpLocation" : {
    "locationName" : "Naperville",
    "longitude" : -88.14729,
    "latitude" : 41.78586,
    "politicalName" : "Illinois, United States",
    "locationType" : "APPROXIMATE"
  },
  "pickUpLocationComplement" : "",
  "comments" : "",
  "rating" : "",
  "dropOffLocation" : {
    "locationName" : "Wheaton",
    "longitude" : -88.10701,
    "latitude" : 41.86614,
    "politicalName" : "Illinois, United States",
    "locationType" : "APPROXIMATE"
  },
  "version" : 0,
  "messageToTheDriver" : "",
  "carType" : {
    "code" : "B_VAN",
    "description" : "Van"
  },
  "pickUpDateTime" : "2013-06-05 23:04"
}
				

2013-09-20 17:37:54,481 [http-bio-8080-exec-23] INFO  taxi.RideController  - Creating a new ride

Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
2013-09-20 17:37:54,495 [http-bio-8080-exec-23] INFO  taxi.RideController  - {"politicalName":"Illinois, United States","locationType":"APPROXIMATE","longitude":-88.14729,"latitude":41.78586,"locationName":"Naperville"}

Hibernate: insert into location (version, created_by, date_created, last_updated, last_updated_by, latitude, location_name, location_type, longitude, political_name, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2013-09-20 17:37:54,505 [http-bio-8080-exec-23] INFO  taxi.RideController  - {"politicalName":"Illinois, United States","locationType":"APPROXIMATE","longitude":-88.10701,"latitude":41.86614,"locationName":"Wheaton"}

Hibernate: insert into location (version, created_by, date_created, last_updated, last_updated_by, latitude, location_name, location_type, longitude, political_name, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into ride (version, car_type, comments, created_by, date_created, driver_id, drop_off_location_id, last_updated, last_updated_by, message_to_the_driver, passenger_id, pick_up_location_id, pick_up_location_complement, pickup_date_time, rating, ride_status, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: SELECT d.user_id as driverId, 3956 * 2 * ASIN(SQRT( POWER(SIN((? - latitude) * pi()/180 / 2), 2) +COS(? * pi()/180) * COS(latitude * pi()/180) *POWER(SIN((? - longitude) * pi()/180 / 2), 2) )) as distance FROM  driver d, location l WHERE d.served_location_id = l.id AND l.longitude between ? and ? and l.latitude between ? and ? and d.car_type >= ? having distance < ? ORDER BY distance limit 10
2013-09-20 17:37:54,557 [http-bio-8080-exec-23] INFO  taxi.RideController  - Notifying driver 7

Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2013-09-20 17:37:54,593 [http-bio-8080-exec-23] INFO  taxi.RideController  - Notifying driver 8

Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2013-09-20 17:37:54,616 [http-bio-8080-exec-23] INFO  taxi.RideController  - Notifying driver 9

Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2013-09-20 17:37:54,640 [http-bio-8080-exec-23] INFO  taxi.RideController  - Notifying driver 17

Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2013-09-20 17:37:54,668 [http-bio-8080-exec-23] INFO  taxi.RideController  - Notifying driver 18

Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2013-09-20 17:37:54,693 [http-bio-8080-exec-23] INFO  taxi.RideController  - Notifying driver 11

Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2013-09-20 17:37:54,719 [http-bio-8080-exec-23] INFO  taxi.RideController  - Notifying driver 12

Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select user0_.id as id0_0_, user0_.version as version0_0_, user0_.account_expired as account3_0_0_, user0_.account_locked as account4_0_0_, user0_.apns_token as apns5_0_0_, user0_.created_by as created6_0_0_, user0_.date_created as date7_0_0_, user0_.email as email0_0_, user0_.enabled as enabled0_0_, user0_.first_name as first10_0_0_, user0_.last_name as last11_0_0_, user0_.last_updated as last12_0_0_, user0_.last_updated_by as last13_0_0_, user0_.locale as locale0_0_, user0_.`password` as password15_0_0_, user0_.password_expired as password16_0_0_, user0_.phone as phone0_0_, user0_.tenant_id as tenant18_0_0_, user0_.username as username0_0_ from user user0_ where user0_.id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select location0_.id as id3_0_, location0_.version as version3_0_, location0_.created_by as created3_3_0_, location0_.date_created as date4_3_0_, location0_.last_updated as last5_3_0_, location0_.last_updated_by as last6_3_0_, location0_.latitude as latitude3_0_, location0_.location_name as location8_3_0_, location0_.location_type as location9_3_0_, location0_.longitude as longitude3_0_, location0_.political_name as political11_3_0_, location0_.tenant_id as tenant12_3_0_ from location location0_ where location0_.id=?
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Ride #9 created and sent to 7 drivers. "}}
================================================================================
#
]]></system-out>

      <system-err><![CDATA[--Output from testRetrieveAssignedRidesEnglish--
--Output from testCancelRideSuccessEnglish--
--Output from testCloseRideSuccessPortuguese--
--Output from testCloseRideBadMessage--
2013-09-20 17:37:52,147 [http-bio-8080-exec-31] ERROR moovt.HandlerService  - A generic exception occurred JSONObject["rating"] not found.

--Output from testCloneRideBadMessage--
2013-09-20 17:37:52,271 [http-bio-8080-exec-6] ERROR moovt.HandlerService  - A generic exception occurred JSONObject["id"] not found.

--Output from testCloseRideSuccessEnglish--
--Output from testCancelRideSuccessPortuguese--
--Output from testCancelRideNotFoundEnglish--
--Output from testCancelRideNotFoundPortuguese--
--Output from testCloseRideAlreadyClosed--
--Output from testCloseRideUnsassignedError--
--Output from testRetrieveAllRidesEnglish--
--Output from testRetrievePassengerRidesEnglish--
--Output from testRetrieveUnassignedRideInServedAreaEnglish--
--Output from testRetrieveUnassignedRideInServedAreaNoRideFoundEnglish--
--Output from testAssignRideToDriverEnglish--
--Output from testCloneRide--
--Output from testCreateRideENglish--
]]></system-err>

  </testsuite>
  <testsuite errors="0" failures="2" hostname="Eduardo-Goncalvess-MacBook-Pro.local" id="4" name="UserFunctionalTests" package="com.moovt" tests="21" time="1.912" timestamp="2013-09-20T22:37:54">
      <properties />

      <testcase classname="com.moovt.UserFunctionalTests" name="testCreateUserSuccessEnglish" time="0.073" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testCreateUserSuccessPortuquese" time="0.082" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testCreateUserNoUserNameEnglish" time="0.247" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testCreateUserNoUserNamePortuguese" time="0.101" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testCreateUserNoPasswordEnglish" time="0.06" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testCreateUserNoPasswordPortuguese" time="0.061" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testCreateUserDuplicateEmailPortuguese" time="0.263">
          <failure message="com.grailsrocks.functionaltest.FunctionalTestException: Expected content to loosely contain [ERROR] but it didn&apos;t" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: com.grailsrocks.functionaltest.FunctionalTestException: Expected content to loosely contain [ERROR] but it didn&apos;t
	at com.grailsrocks.functionaltest.TestCaseBase.invokeMethod(TestCaseBase.groovy:184)
	at com.moovt.UserFunctionalTests.testCreateUserDuplicateEmailPortuguese(UserFunctionalTests.groovy:252)
</failure>

      </testcase>

      <testcase classname="com.moovt.UserFunctionalTests" name="testResetPasswordSuccessEnglish" time="0.134" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testResetPasswordSuccessPortuguese" time="0.124" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testResetPasswordBadMessageNoTenante" time="0.047" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testResetPasswordBadMessageNoEmail" time="0.032" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testResetPasswordTenantNotFound" time="0.051" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testCreateUserNoEmailEnglish" time="0.067" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testCreateUserNoEmailPortuguese" time="0.059" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testCreateUserDuplicateUsernameEnglish" time="0.076" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testCreateUserDuplicateUsernamePortuguese" time="0.058" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testCreateUserDuplicateEmailEnglish" time="0.135">
          <failure message="com.grailsrocks.functionaltest.FunctionalTestException: Expected content to loosely contain [This email (existingEmail@moovt.com) already exists] but it didn&apos;t" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: com.grailsrocks.functionaltest.FunctionalTestException: Expected content to loosely contain [This email (existingEmail@moovt.com) already exists] but it didn&apos;t
	at com.grailsrocks.functionaltest.TestCaseBase.invokeMethod(TestCaseBase.groovy:184)
	at com.moovt.UserFunctionalTests.testCreateUserDuplicateEmailEnglish(UserFunctionalTests.groovy:238)
</failure>

      </testcase>

      <testcase classname="com.moovt.UserFunctionalTests" name="testCreateUserBadMessage" time="0.037" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testCreateUserBadTenantEnglish" time="0.046" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testResetPasswordTenantEmailNotFoundEnglish" time="0.056" />

      <testcase classname="com.moovt.UserFunctionalTests" name="testResetPasswordTenantEmailNotFoundPortuguese" time="0.066" />

      <system-out><![CDATA[--Output from testCreateUserSuccessEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "Moovt", "email":"movieGoer@test.com", "username": "moovieGoer", "password":"moovieGoer", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "en_US"}
				
================================================================================
2013-09-20 17:37:54,872 [http-bio-8080-exec-14] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname": "Moovt", "email":"movieGoer@test.com", "username": "moovieGoer", "password":"moovieGoer", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "en_US"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:54,878 [http-bio-8080-exec-14] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: insert into user (version, account_expired, account_locked, apns_token, created_by, date_created, email, enabled, first_name, last_name, last_updated, last_updated_by, locale, `password`, password_expired, phone, tenant_id, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"User moovieGoer created"}, "additionalInfo":{"JSESSIONID":"DF45D7693AC7408616485607EA8962A7"}}
================================================================================
#
--Output from testCreateUserSuccessPortuquese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "Moovt", "email":"movieLover@test.com", "username": "moovieLover", "password":"moovieLover", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "pt_BR"}
				
================================================================================
2013-09-20 17:37:54,946 [http-bio-8080-exec-20] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname": "Moovt", "email":"movieLover@test.com", "username": "moovieLover", "password":"moovieLover", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "pt_BR"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:54,950 [http-bio-8080-exec-20] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: insert into user (version, account_expired, account_locked, apns_token, created_by, date_created, email, enabled, first_name, last_name, last_updated, last_updated_by, locale, `password`, password_expired, phone, tenant_id, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Usuário moovieLover criado"}, "additionalInfo":{"JSESSIONID":"93AD1ED75F08A57E4A9B37CA90847CEC"}}
================================================================================
#
--Output from testCreateUserNoUserNameEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "Moovt", "email":"noUserName@test.com", "username": "", "password":"moovieGoer", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "en_US"}
				
================================================================================
2013-09-20 17:37:55,026 [http-bio-8080-exec-18] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname": "Moovt", "email":"noUserName@test.com", "username": "", "password":"moovieGoer", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "en_US"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:55,030 [http-bio-8080-exec-18] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

2013-09-20 17:37:55,236 [http-bio-8080-exec-18] INFO  moovt.HandlerService  - grails.validation.ValidationErrors: 1 errors
Field error in object 'com.moovt.audit.User' on field 'username': rejected value []; codes [com.moovt.audit.User.username.blank.error.com.moovt.audit.User.username,com.moovt.audit.User.username.blank.error.username,com.moovt.audit.User.username.blank.error.java.lang.String,com.moovt.audit.User.username.blank.error,user.username.blank.error.com.moovt.audit.User.username,user.username.blank.error.username,user.username.blank.error.java.lang.String,user.username.blank.error,com.moovt.audit.User.username.blank.com.moovt.audit.User.username,com.moovt.audit.User.username.blank.username,com.moovt.audit.User.username.blank.java.lang.String,com.moovt.audit.User.username.blank,user.username.blank.com.moovt.audit.User.username,user.username.blank.username,user.username.blank.java.lang.String,user.username.blank,blank.com.moovt.audit.User.username,blank.username,blank.java.lang.String,blank]; arguments [username,class com.moovt.audit.User]; default message [Property [{0}] of class [{1}] cannot be blank]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"The user name must be provided."}}
================================================================================
#
--Output from testCreateUserNoUserNamePortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "Moovt", "email":"noUserName@test.com", "username": "", "password":"moovieGoer", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "pt_BR"}
				
================================================================================
2013-09-20 17:37:55,280 [http-bio-8080-exec-5] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname": "Moovt", "email":"noUserName@test.com", "username": "", "password":"moovieGoer", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "pt_BR"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:55,284 [http-bio-8080-exec-5] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

2013-09-20 17:37:55,341 [http-bio-8080-exec-5] INFO  moovt.HandlerService  - grails.validation.ValidationErrors: 1 errors
Field error in object 'com.moovt.audit.User' on field 'username': rejected value []; codes [com.moovt.audit.User.username.blank.error.com.moovt.audit.User.username,com.moovt.audit.User.username.blank.error.username,com.moovt.audit.User.username.blank.error.java.lang.String,com.moovt.audit.User.username.blank.error,user.username.blank.error.com.moovt.audit.User.username,user.username.blank.error.username,user.username.blank.error.java.lang.String,user.username.blank.error,com.moovt.audit.User.username.blank.com.moovt.audit.User.username,com.moovt.audit.User.username.blank.username,com.moovt.audit.User.username.blank.java.lang.String,com.moovt.audit.User.username.blank,user.username.blank.com.moovt.audit.User.username,user.username.blank.username,user.username.blank.java.lang.String,user.username.blank,blank.com.moovt.audit.User.username,blank.username,blank.java.lang.String,blank]; arguments [username,class com.moovt.audit.User]; default message [O campo [{0}] da classe [{1}] não pode ficar em branco]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"O nome do usuário deve ser preenchido."}}
================================================================================
#
--Output from testCreateUserNoPasswordEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "Moovt", "email":"noPasswordUser@test.com", "username": "movieFan", "password":"", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "en_US"}
				
================================================================================
2013-09-20 17:37:55,376 [http-bio-8080-exec-9] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname": "Moovt", "email":"noPasswordUser@test.com", "username": "movieFan", "password":"", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "en_US"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:55,380 [http-bio-8080-exec-9] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
2013-09-20 17:37:55,398 [http-bio-8080-exec-9] INFO  moovt.HandlerService  - grails.validation.ValidationErrors: 1 errors
Field error in object 'com.moovt.audit.User' on field 'password': rejected value []; codes [com.moovt.audit.User.password.blank.error.com.moovt.audit.User.password,com.moovt.audit.User.password.blank.error.password,com.moovt.audit.User.password.blank.error.java.lang.String,com.moovt.audit.User.password.blank.error,user.password.blank.error.com.moovt.audit.User.password,user.password.blank.error.password,user.password.blank.error.java.lang.String,user.password.blank.error,com.moovt.audit.User.password.blank.com.moovt.audit.User.password,com.moovt.audit.User.password.blank.password,com.moovt.audit.User.password.blank.java.lang.String,com.moovt.audit.User.password.blank,user.password.blank.com.moovt.audit.User.password,user.password.blank.password,user.password.blank.java.lang.String,user.password.blank,blank.com.moovt.audit.User.password,blank.password,blank.java.lang.String,blank]; arguments [password,class com.moovt.audit.User]; default message [Property [{0}] of class [{1}] cannot be blank]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"The password must be provided."}}
================================================================================
#
--Output from testCreateUserNoPasswordPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "Moovt", "email":"noPasswordUser@test.com", "username": "movieFan", "password":"", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "pt_BR"}
				
================================================================================
2013-09-20 17:37:55,443 [http-bio-8080-exec-29] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname": "Moovt", "email":"noPasswordUser@test.com", "username": "movieFan", "password":"", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "pt_BR"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:55,447 [http-bio-8080-exec-29] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
2013-09-20 17:37:55,465 [http-bio-8080-exec-29] INFO  moovt.HandlerService  - grails.validation.ValidationErrors: 1 errors
Field error in object 'com.moovt.audit.User' on field 'password': rejected value []; codes [com.moovt.audit.User.password.blank.error.com.moovt.audit.User.password,com.moovt.audit.User.password.blank.error.password,com.moovt.audit.User.password.blank.error.java.lang.String,com.moovt.audit.User.password.blank.error,user.password.blank.error.com.moovt.audit.User.password,user.password.blank.error.password,user.password.blank.error.java.lang.String,user.password.blank.error,com.moovt.audit.User.password.blank.com.moovt.audit.User.password,com.moovt.audit.User.password.blank.password,com.moovt.audit.User.password.blank.java.lang.String,com.moovt.audit.User.password.blank,user.password.blank.com.moovt.audit.User.password,user.password.blank.password,user.password.blank.java.lang.String,user.password.blank,blank.com.moovt.audit.User.password,blank.password,blank.java.lang.String,blank]; arguments [password,class com.moovt.audit.User]; default message [O campo [{0}] da classe [{1}] não pode ficar em branco]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"A senha deve ser preenchida."}}
================================================================================
#
--Output from testCreateUserDuplicateEmailPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "Moovt", "email":"existingEmail@moovt.com", "username": "userWithSameEmail", "password":"moovieLover", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "pt_BR"}
				
================================================================================
2013-09-20 17:37:55,522 [http-bio-8080-exec-28] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname": "Moovt", "email":"existingEmail@moovt.com", "username": "userWithSameEmail", "password":"moovieLover", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "pt_BR"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:55,526 [http-bio-8080-exec-28] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: insert into user (version, account_expired, account_locked, apns_token, created_by, date_created, email, enabled, first_name, last_name, last_updated, last_updated_by, locale, `password`, password_expired, phone, tenant_id, username) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
HERE com.moovt.audit.User
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select this_.role_id as role1_8_0_, this_.user_id as user2_8_0_, this_.created_by as created3_8_0_, this_.date_created as date4_8_0_, this_.last_updated as last5_8_0_, this_.last_updated_by as last6_8_0_, this_.tenant_id as tenant7_8_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Usuário userWithSameEmail criado"}, "additionalInfo":{"JSESSIONID":"5CDB8ADA7210827BF5B1091E9CC121E5"}}
================================================================================
#
Failed: Expected content to loosely contain [ERROR] but it didn't
junit.framework.AssertionFailedError: Expected content to loosely contain [ERROR] but it didn't
	at junit.framework.Assert.fail(Assert.java:50)
	at junit.framework.Assert.assertTrue(Assert.java:20)
	at com.grailsrocks.functionaltest.TestCaseBase.assertContentContains(TestCaseBase.groovy:298)
	at com.grailsrocks.functionaltest.TestCaseBase.invokeMethod(TestCaseBase.groovy:179)
	at com.moovt.UserFunctionalTests.testCreateUserDuplicateEmailPortuguese(UserFunctionalTests.groovy:252)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.ParentRunner$run.call(Unknown Source)
	at _GrailsTest_groovy$_run_closure4.doCall(_GrailsTest_groovy:290)
	at _GrailsTest_groovy$_run_closure2.doCall(_GrailsTest_groovy:248)
	at _GrailsTest_groovy$_run_closure1_closure21.doCall(_GrailsTest_groovy:195)
	at _GrailsTest_groovy$_run_closure1.doCall(_GrailsTest_groovy:184)
	at org.codehaus.gant.GantMetaClass.invokeMethod(GantMetaClass.java:133)
	at org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16_closure18.doCall(GantBinding.groovy:185)
	at org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16_closure18.doCall(GantBinding.groovy)
	at org.codehaus.gant.GantBinding.withTargetEvent(GantBinding.groovy:90)
	at org.codehaus.gant.GantBinding.this$4$withTargetEvent(GantBinding.groovy)
	at org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16.doCall(GantBinding.groovy:185)
	at org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16.doCall(GantBinding.groovy)
	at org.codehaus.gant.GantMetaClass.invokeMethod(GantMetaClass.java:133)
	at TestApp$_run_closure1.doCall(TestApp.groovy:82)
	at org.codehaus.gant.GantMetaClass.invokeMethod(GantMetaClass.java:133)
	at org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16_closure18.doCall(GantBinding.groovy:185)
	at org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16_closure18.doCall(GantBinding.groovy)
	at org.codehaus.gant.GantBinding.withTargetEvent(GantBinding.groovy:90)
	at org.codehaus.gant.GantBinding.this$4$withTargetEvent(GantBinding.groovy)
	at org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16.doCall(GantBinding.groovy:185)
	at org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16.doCall(GantBinding.groovy)
URL: http://localhost:8080/moovt/user/createUser


--Output from testResetPasswordSuccessEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/resetPassword parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "Moovt", "email":"jforgetful@moovt.com"}
				
================================================================================
2013-09-20 17:37:55,800 [http-bio-8080-exec-22] INFO  common.UserController  - resetPassword params are: [action:resetPassword, controller:user] and model is : 
				{"tenantname": "Moovt", "email":"jforgetful@moovt.com"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where (this_.tenant_id=? and this_.email=?)
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Your new password was sent to jforgetful@moovt.com."}}
================================================================================
#
--Output from testResetPasswordSuccessPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/resetPassword parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "Moovt", "email":"jforgetful@moovt.com"}
				
================================================================================
2013-09-20 17:37:55,917 [http-bio-8080-exec-12] INFO  common.UserController  - resetPassword params are: [action:resetPassword, controller:user] and model is : 
				{"tenantname": "Moovt", "email":"jforgetful@moovt.com"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where (this_.tenant_id=? and this_.email=?)
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: update user set version=?, account_expired=?, account_locked=?, apns_token=?, created_by=?, date_created=?, email=?, enabled=?, first_name=?, last_name=?, last_updated=?, last_updated_by=?, locale=?, `password`=?, password_expired=?, phone=?, tenant_id=?, username=? where id=? and version=?
Hibernate: insert into notification_task (version, created_by, date_created, failed_reason, last_updated, last_updated_by, message, notification_from, notification_to, process_date, subject, task_status, task_type, tenant_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"A sua nova senha foi enviada para jforgetful@moovt.com."}}
================================================================================
#
--Output from testResetPasswordBadMessageNoTenante--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/resetPassword parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantXame": "Moovt", "email":"jforgetful@moovt.com"}
				
================================================================================
2013-09-20 17:37:56,039 [http-bio-8080-exec-2] INFO  common.UserController  - resetPassword params are: [action:resetPassword, controller:user] and model is : 
				{"tenantXame": "Moovt", "email":"jforgetful@moovt.com"}
				

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"JSONObject[\"tenantname\"] not found."}}
================================================================================
#
--Output from testResetPasswordBadMessageNoEmail--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/resetPassword parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "Moovt", "emailX":"jforgetful@moovt.com"}
				
================================================================================
2013-09-20 17:37:56,073 [http-bio-8080-exec-27] INFO  common.UserController  - resetPassword params are: [action:resetPassword, controller:user] and model is : 
				{"tenantname": "Moovt", "emailX":"jforgetful@moovt.com"}
				

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"JSONObject[\"email\"] not found."}}
================================================================================
#
--Output from testResetPasswordTenantNotFound--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/resetPassword parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "TheBadTenant", "email":"jforgetful@moovt.com"}
				
================================================================================
2013-09-20 17:37:56,109 [http-bio-8080-exec-14] INFO  common.UserController  - resetPassword params are: [action:resetPassword, controller:user] and model is : 
				{"tenantname": "TheBadTenant", "email":"jforgetful@moovt.com"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:56,124 [http-bio-8080-exec-14] WARN  common.UserController  - This tenant (TheBadTenant) does not exist. Please use an existing tenant to create this user.

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"This tenant does not exist (TheBadTenant)"}}
================================================================================
#
--Output from testCreateUserNoEmailEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "Moovt","email":"", "username": "movieFan", "password":"Welcome!1", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "en_US"}
				
================================================================================
2013-09-20 17:37:56,164 [http-bio-8080-exec-31] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname": "Moovt","email":"", "username": "movieFan", "password":"Welcome!1", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "en_US"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:56,169 [http-bio-8080-exec-31] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
2013-09-20 17:37:56,194 [http-bio-8080-exec-31] INFO  moovt.HandlerService  - grails.validation.ValidationErrors: 1 errors
Field error in object 'com.moovt.audit.User' on field 'email': rejected value []; codes [com.moovt.audit.User.email.blank.error.com.moovt.audit.User.email,com.moovt.audit.User.email.blank.error.email,com.moovt.audit.User.email.blank.error.java.lang.String,com.moovt.audit.User.email.blank.error,user.email.blank.error.com.moovt.audit.User.email,user.email.blank.error.email,user.email.blank.error.java.lang.String,user.email.blank.error,com.moovt.audit.User.email.blank.com.moovt.audit.User.email,com.moovt.audit.User.email.blank.email,com.moovt.audit.User.email.blank.java.lang.String,com.moovt.audit.User.email.blank,user.email.blank.com.moovt.audit.User.email,user.email.blank.email,user.email.blank.java.lang.String,user.email.blank,blank.com.moovt.audit.User.email,blank.email,blank.java.lang.String,blank]; arguments [email,class com.moovt.audit.User]; default message [Property [{0}] of class [{1}] cannot be blank]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"The email must be provided."}}
================================================================================
#
--Output from testCreateUserNoEmailPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "Moovt","email":"", "username": "movieFan", "password":"Welcome!1", "firstName":"TestFirstName", "lastName": "TestLastName","phone":"800-800-8080", "locale": "pt_BR"}
				
================================================================================
2013-09-20 17:37:56,233 [http-bio-8080-exec-6] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname": "Moovt","email":"", "username": "movieFan", "password":"Welcome!1", "firstName":"TestFirstName", "lastName": "TestLastName","phone":"800-800-8080", "locale": "pt_BR"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:56,237 [http-bio-8080-exec-6] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
2013-09-20 17:37:56,255 [http-bio-8080-exec-6] INFO  moovt.HandlerService  - grails.validation.ValidationErrors: 1 errors
Field error in object 'com.moovt.audit.User' on field 'email': rejected value []; codes [com.moovt.audit.User.email.blank.error.com.moovt.audit.User.email,com.moovt.audit.User.email.blank.error.email,com.moovt.audit.User.email.blank.error.java.lang.String,com.moovt.audit.User.email.blank.error,user.email.blank.error.com.moovt.audit.User.email,user.email.blank.error.email,user.email.blank.error.java.lang.String,user.email.blank.error,com.moovt.audit.User.email.blank.com.moovt.audit.User.email,com.moovt.audit.User.email.blank.email,com.moovt.audit.User.email.blank.java.lang.String,com.moovt.audit.User.email.blank,user.email.blank.com.moovt.audit.User.email,user.email.blank.email,user.email.blank.java.lang.String,user.email.blank,blank.com.moovt.audit.User.email,blank.email,blank.java.lang.String,blank]; arguments [email,class com.moovt.audit.User]; default message [O campo [{0}] da classe [{1}] não pode ficar em branco]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"O email deve ser preenchido."}}
================================================================================
#
--Output from testCreateUserDuplicateUsernameEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "Moovt", "email":"duplicateUser@test.com", "username": "duplicateUser", "password":"moovieGoer", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "en_US"}
				
================================================================================
2013-09-20 17:37:56,299 [http-bio-8080-exec-3] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname": "Moovt", "email":"duplicateUser@test.com", "username": "duplicateUser", "password":"moovieGoer", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "en_US"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:56,303 [http-bio-8080-exec-3] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
2013-09-20 17:37:56,329 [http-bio-8080-exec-3] INFO  moovt.HandlerService  - grails.validation.ValidationErrors: 1 errors
Field error in object 'com.moovt.audit.User' on field 'username': rejected value [duplicateUser]; codes [com.moovt.audit.User.username.unique.error.com.moovt.audit.User.username,com.moovt.audit.User.username.unique.error.username,com.moovt.audit.User.username.unique.error.java.lang.String,com.moovt.audit.User.username.unique.error,user.username.unique.error.com.moovt.audit.User.username,user.username.unique.error.username,user.username.unique.error.java.lang.String,user.username.unique.error,com.moovt.audit.User.username.unique.com.moovt.audit.User.username,com.moovt.audit.User.username.unique.username,com.moovt.audit.User.username.unique.java.lang.String,com.moovt.audit.User.username.unique,user.username.unique.com.moovt.audit.User.username,user.username.unique.username,user.username.unique.java.lang.String,user.username.unique,unique.com.moovt.audit.User.username,unique.username,unique.java.lang.String,unique]; arguments [username,class com.moovt.audit.User,duplicateUser]; default message [Property [{0}] of class [{1}] with value [{2}] must be unique]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"This user (duplicateUser) already exists."}}
================================================================================
#
--Output from testCreateUserDuplicateUsernamePortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "Moovt", "email":"duplicateUser@test.com", "username": "duplicateUser", "password":"moovieLover", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "pt_BR"}				
				
================================================================================
2013-09-20 17:37:56,371 [http-bio-8080-exec-24] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname": "Moovt", "email":"duplicateUser@test.com", "username": "duplicateUser", "password":"moovieLover", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "pt_BR"}				
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:56,376 [http-bio-8080-exec-24] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
2013-09-20 17:37:56,395 [http-bio-8080-exec-24] INFO  moovt.HandlerService  - grails.validation.ValidationErrors: 1 errors
Field error in object 'com.moovt.audit.User' on field 'username': rejected value [duplicateUser]; codes [com.moovt.audit.User.username.unique.error.com.moovt.audit.User.username,com.moovt.audit.User.username.unique.error.username,com.moovt.audit.User.username.unique.error.java.lang.String,com.moovt.audit.User.username.unique.error,user.username.unique.error.com.moovt.audit.User.username,user.username.unique.error.username,user.username.unique.error.java.lang.String,user.username.unique.error,com.moovt.audit.User.username.unique.com.moovt.audit.User.username,com.moovt.audit.User.username.unique.username,com.moovt.audit.User.username.unique.java.lang.String,com.moovt.audit.User.username.unique,user.username.unique.com.moovt.audit.User.username,user.username.unique.username,user.username.unique.java.lang.String,user.username.unique,unique.com.moovt.audit.User.username,unique.username,unique.java.lang.String,unique]; arguments [username,class com.moovt.audit.User,duplicateUser]; default message [O campo [{0}] da classe [{1}] com o valor [{2}] deve ser único]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"Este usuário (duplicateUser) já existe."}}
================================================================================
#
--Output from testCreateUserDuplicateEmailEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "Moovt", "email":"existingEmail@moovt.com", "username": "userWithSameEmail", "password":"moovieGoer", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "en_US"}
				
================================================================================
2013-09-20 17:37:56,433 [http-bio-8080-exec-11] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname": "Moovt", "email":"existingEmail@moovt.com", "username": "userWithSameEmail", "password":"moovieGoer", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080", "locale": "en_US"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
2013-09-20 17:37:56,438 [http-bio-8080-exec-11] INFO  common.UserController  - Creating a new user and/or driver and/or passenger

Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where this_.username=? and this_.tenant_id=?
Hibernate: select driver0_.user_id as user1_4_0_, driver0_.version as version4_0_, driver0_.active_status as active3_4_0_, driver0_.car_type as car4_4_0_, driver0_.created_by as created5_4_0_, driver0_.date_created as date6_4_0_, driver0_.last_updated as last7_4_0_, driver0_.last_updated_by as last8_4_0_, driver0_.served_location_id as served9_4_0_, driver0_.tenant_id as tenant10_4_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_5_0_, passenger0_.version as version5_0_, passenger0_.created_by as created3_5_0_, passenger0_.date_created as date4_5_0_, passenger0_.last_updated as last5_5_0_, passenger0_.last_updated_by as last6_5_0_, passenger0_.tenant_id as tenant7_5_0_ from passenger passenger0_ where passenger0_.user_id=?
2013-09-20 17:37:56,500 [http-bio-8080-exec-11] INFO  moovt.HandlerService  - grails.validation.ValidationErrors: 1 errors
Field error in object 'com.moovt.audit.User' on field 'username': rejected value [userWithSameEmail]; codes [com.moovt.audit.User.username.unique.error.com.moovt.audit.User.username,com.moovt.audit.User.username.unique.error.username,com.moovt.audit.User.username.unique.error.java.lang.String,com.moovt.audit.User.username.unique.error,user.username.unique.error.com.moovt.audit.User.username,user.username.unique.error.username,user.username.unique.error.java.lang.String,user.username.unique.error,com.moovt.audit.User.username.unique.com.moovt.audit.User.username,com.moovt.audit.User.username.unique.username,com.moovt.audit.User.username.unique.java.lang.String,com.moovt.audit.User.username.unique,user.username.unique.com.moovt.audit.User.username,user.username.unique.username,user.username.unique.java.lang.String,user.username.unique,unique.com.moovt.audit.User.username,unique.username,unique.java.lang.String,unique]; arguments [username,class com.moovt.audit.User,userWithSameEmail]; default message [Property [{0}] of class [{1}] with value [{2}] must be unique]

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"This user (userWithSameEmail) already exists."}}
================================================================================
#
Failed: Expected content to loosely contain [This email (existingEmail@moovt.com) already exists] but it didn't
junit.framework.AssertionFailedError: Expected content to loosely contain [This email (existingEmail@moovt.com) already exists] but it didn't
	at junit.framework.Assert.fail(Assert.java:50)
	at junit.framework.Assert.assertTrue(Assert.java:20)
	at com.grailsrocks.functionaltest.TestCaseBase.assertContentContains(TestCaseBase.groovy:298)
	at com.grailsrocks.functionaltest.TestCaseBase.invokeMethod(TestCaseBase.groovy:179)
	at com.moovt.UserFunctionalTests.testCreateUserDuplicateEmailEnglish(UserFunctionalTests.groovy:238)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.ParentRunner$run.call(Unknown Source)
	at _GrailsTest_groovy$_run_closure4.doCall(_GrailsTest_groovy:290)
	at _GrailsTest_groovy$_run_closure2.doCall(_GrailsTest_groovy:248)
	at _GrailsTest_groovy$_run_closure1_closure21.doCall(_GrailsTest_groovy:195)
	at _GrailsTest_groovy$_run_closure1.doCall(_GrailsTest_groovy:184)
	at org.codehaus.gant.GantMetaClass.invokeMethod(GantMetaClass.java:133)
	at org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16_closure18.doCall(GantBinding.groovy:185)
	at org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16_closure18.doCall(GantBinding.groovy)
	at org.codehaus.gant.GantBinding.withTargetEvent(GantBinding.groovy:90)
	at org.codehaus.gant.GantBinding.this$4$withTargetEvent(GantBinding.groovy)
	at org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16.doCall(GantBinding.groovy:185)
	at org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16.doCall(GantBinding.groovy)
	at org.codehaus.gant.GantMetaClass.invokeMethod(GantMetaClass.java:133)
	at TestApp$_run_closure1.doCall(TestApp.groovy:82)
	at org.codehaus.gant.GantMetaClass.invokeMethod(GantMetaClass.java:133)
	at org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16_closure18.doCall(GantBinding.groovy:185)
	at org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16_closure18.doCall(GantBinding.groovy)
	at org.codehaus.gant.GantBinding.withTargetEvent(GantBinding.groovy:90)
	at org.codehaus.gant.GantBinding.this$4$withTargetEvent(GantBinding.groovy)
	at org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16.doCall(GantBinding.groovy:185)
	at org.codehaus.gant.GantBinding$_initializeGantBinding_closure5_closure16.doCall(GantBinding.groovy)
URL: http://localhost:8080/moovt/user/createUser


--Output from testCreateUserBadMessage--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

================================================================================
2013-09-20 17:37:56,569 [http-bio-8080-exec-16] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 

Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"A JSONObject text must begin with '{' at character 0 of "}}
================================================================================
#
--Output from testCreateUserBadTenantEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/createUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "TheBadTenant", "email":"movieGoer@test.com","username": "moovieGoer", "password":"moovieGoer", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080"}
				
================================================================================
2013-09-20 17:37:56,611 [http-bio-8080-exec-8] INFO  common.UserController  - createUser params are: [action:createUser, controller:user] and model is : 
				{"tenantname": "TheBadTenant", "email":"movieGoer@test.com","username": "moovieGoer", "password":"moovieGoer", "firstName":"TestFirstName", lastName: "TestLastName","phone":"800-800-8080"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"This tenant does not exist (TheBadTenant)"}}
================================================================================
#
--Output from testResetPasswordTenantEmailNotFoundEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/resetPassword parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "Moovt", "email":"jforgetfulx@moovt.com"}
				
================================================================================
2013-09-20 17:37:56,664 [http-bio-8080-exec-30] INFO  common.UserController  - resetPassword params are: [action:resetPassword, controller:user] and model is : 
				{"tenantname": "Moovt", "email":"jforgetfulx@moovt.com"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where (this_.tenant_id=? and this_.email=?)
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"This email (jforgetfulx@moovt.com) was not found in the system."}}
================================================================================
#
--Output from testResetPasswordTenantEmailNotFoundPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/user/resetPassword parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"tenantname": "Moovt", "email":"jforgetfulx@moovt.com"}
				
================================================================================
2013-09-20 17:37:56,729 [http-bio-8080-exec-15] INFO  common.UserController  - resetPassword params are: [action:resetPassword, controller:user] and model is : 
				{"tenantname": "Moovt", "email":"jforgetfulx@moovt.com"}
				

Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.created_by as created3_1_0_, this_.date_created as date4_1_0_, this_.last_updated as last5_1_0_, this_.last_updated_by as last6_1_0_, this_.name as name1_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id0_0_, this_.version as version0_0_, this_.account_expired as account3_0_0_, this_.account_locked as account4_0_0_, this_.apns_token as apns5_0_0_, this_.created_by as created6_0_0_, this_.date_created as date7_0_0_, this_.email as email0_0_, this_.enabled as enabled0_0_, this_.first_name as first10_0_0_, this_.last_name as last11_0_0_, this_.last_updated as last12_0_0_, this_.last_updated_by as last13_0_0_, this_.locale as locale0_0_, this_.`password` as password15_0_0_, this_.password_expired as password16_0_0_, this_.phone as phone0_0_, this_.tenant_id as tenant18_0_0_, this_.username as username0_0_ from user this_ where (this_.tenant_id=? and this_.email=?)
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"Este email (jforgetfulx@moovt.com) não foi encontrado no sistema."}}
================================================================================
#
]]></system-out>

      <system-err><![CDATA[--Output from testCreateUserSuccessEnglish--
--Output from testCreateUserSuccessPortuquese--
--Output from testCreateUserNoUserNameEnglish--
--Output from testCreateUserNoUserNamePortuguese--
--Output from testCreateUserNoPasswordEnglish--
--Output from testCreateUserNoPasswordPortuguese--
--Output from testCreateUserDuplicateEmailPortuguese--
--Output from testResetPasswordSuccessEnglish--
--Output from testResetPasswordSuccessPortuguese--
--Output from testResetPasswordBadMessageNoTenante--
2013-09-20 17:37:56,040 [http-bio-8080-exec-2] ERROR moovt.HandlerService  - A generic exception occurred JSONObject["tenantname"] not found.

--Output from testResetPasswordBadMessageNoEmail--
2013-09-20 17:37:56,074 [http-bio-8080-exec-27] ERROR moovt.HandlerService  - A generic exception occurred JSONObject["email"] not found.

--Output from testResetPasswordTenantNotFound--
--Output from testCreateUserNoEmailEnglish--
--Output from testCreateUserNoEmailPortuguese--
--Output from testCreateUserDuplicateUsernameEnglish--
--Output from testCreateUserDuplicateUsernamePortuguese--
--Output from testCreateUserDuplicateEmailEnglish--
--Output from testCreateUserBadMessage--
2013-09-20 17:37:56,571 [http-bio-8080-exec-16] ERROR moovt.HandlerService  - A generic exception occurred A JSONObject text must begin with '{' at character 0 of 

--Output from testCreateUserBadTenantEnglish--
--Output from testResetPasswordTenantEmailNotFoundEnglish--
--Output from testResetPasswordTenantEmailNotFoundPortuguese--
]]></system-err>

  </testsuite>
</testsuites>
