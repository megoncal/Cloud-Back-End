<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="0" failures="0" hostname="Eduardo-Goncalvess-MacBook-Pro.local" name="com.moovt.LoginFunctionalTests" tests="13" time="1.195" timestamp="2013-07-02T02:12:30">
  <properties />
  <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginBadMessage" time="0.058" />
  <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginSuccessEnglish" time="0.066" />
  <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginSuccessPortuguese" time="0.078" />
  <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginNoTenantEnglish" time="0.095" />
  <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginNoTenantPortuguese" time="0.071" />
  <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginTenantNotFoundEnglish" time="0.097" />
  <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginTenantNotFoundPortuguese" time="0.085" />
  <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginNoPasswordEnglish" time="0.121" />
  <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginNoUsernamedEnglish" time="0.096" />
  <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginFailedEnglish" time="0.167" />
  <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginNoPasswordPortuguese" time="0.062" />
  <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginNoUsernamedPortuguese" time="0.065" />
  <testcase classname="com.moovt.LoginFunctionalTests" name="testLoginFailedPortuguese" time="0.097" />
  <system-out><![CDATA[--Output from testLoginBadMessage--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

================================================================================
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"A JSONObject text must begin with '{' at character 0 of "}}
================================================================================
#
--Output from testLoginSuccessEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname":"WorldTaxi","username":"jgoodrider","password":"Welcome!1"}
				
================================================================================
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.created_by as created3_6_0_, this_.date_created as date4_6_0_, this_.last_updated as last5_6_0_, this_.last_updated_by as last6_6_0_, this_.name as name6_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.account_expired as account3_1_0_, this_.account_locked as account4_1_0_, this_.created_by as created5_1_0_, this_.date_created as date6_1_0_, this_.email as email1_0_, this_.enabled as enabled1_0_, this_.first_name as first9_1_0_, this_.last_name as last10_1_0_, this_.last_updated as last11_1_0_, this_.last_updated_by as last12_1_0_, this_.locale as locale1_0_, this_.`password` as password14_1_0_, this_.password_expired as password15_1_0_, this_.phone as phone1_0_, this_.tenant_id as tenant17_1_0_, this_.username as username1_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_0_0_, driver0_.version as version0_0_, driver0_.active_status as active3_0_0_, driver0_.car_type as car4_0_0_, driver0_.created_by as created5_0_0_, driver0_.date_created as date6_0_0_, driver0_.last_updated as last7_0_0_, driver0_.last_updated_by as last8_0_0_, driver0_.served_location_id as served9_0_0_, driver0_.tenant_id as tenant10_0_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_4_0_, passenger0_.version as version4_0_, passenger0_.created_by as created3_4_0_, passenger0_.date_created as date4_4_0_, passenger0_.last_updated as last5_4_0_, passenger0_.last_updated_by as last6_4_0_, passenger0_.tenant_id as tenant7_4_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_5_0_, this_.user_id as user2_5_0_, this_.created_by as created3_5_0_, this_.date_created as date4_5_0_, this_.last_updated as last5_5_0_, this_.last_updated_by as last6_5_0_, this_.tenant_id as tenant7_5_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Hibernate: select this_.role_id as role1_5_0_, this_.user_id as user2_5_0_, this_.created_by as created3_5_0_, this_.date_created as date4_5_0_, this_.last_updated as last5_5_0_, this_.last_updated_by as last6_5_0_, this_.tenant_id as tenant7_5_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
ROLE_DRIVER
ROLE_PASSENGER
ROLE_RIDE_MGR
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login successful."}, "additionalInfo":{"JSESSIONID":"565CDDDC8D107625DC1253036A3FE743","userType":"PASSENGER"}}
================================================================================
#
--Output from testLoginSuccessPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "naSavassi", "username": "admin", "password":"admin"}
				
================================================================================
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.created_by as created3_6_0_, this_.date_created as date4_6_0_, this_.last_updated as last5_6_0_, this_.last_updated_by as last6_6_0_, this_.name as name6_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.account_expired as account3_1_0_, this_.account_locked as account4_1_0_, this_.created_by as created5_1_0_, this_.date_created as date6_1_0_, this_.email as email1_0_, this_.enabled as enabled1_0_, this_.first_name as first9_1_0_, this_.last_name as last10_1_0_, this_.last_updated as last11_1_0_, this_.last_updated_by as last12_1_0_, this_.locale as locale1_0_, this_.`password` as password14_1_0_, this_.password_expired as password15_1_0_, this_.phone as phone1_0_, this_.tenant_id as tenant17_1_0_, this_.username as username1_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_0_0_, driver0_.version as version0_0_, driver0_.active_status as active3_0_0_, driver0_.car_type as car4_0_0_, driver0_.created_by as created5_0_0_, driver0_.date_created as date6_0_0_, driver0_.last_updated as last7_0_0_, driver0_.last_updated_by as last8_0_0_, driver0_.served_location_id as served9_0_0_, driver0_.tenant_id as tenant10_0_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_4_0_, passenger0_.version as version4_0_, passenger0_.created_by as created3_4_0_, passenger0_.date_created as date4_4_0_, passenger0_.last_updated as last5_4_0_, passenger0_.last_updated_by as last6_4_0_, passenger0_.tenant_id as tenant7_4_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_5_0_, this_.user_id as user2_5_0_, this_.created_by as created3_5_0_, this_.date_created as date4_5_0_, this_.last_updated as last5_5_0_, this_.last_updated_by as last6_5_0_, this_.tenant_id as tenant7_5_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Hibernate: select role0_.id as id7_0_, role0_.version as version7_0_, role0_.authority as authority7_0_, role0_.created_by as created4_7_0_, role0_.date_created as date5_7_0_, role0_.last_updated as last6_7_0_, role0_.last_updated_by as last7_7_0_, role0_.tenant_id as tenant8_7_0_ from role role0_ where role0_.id=?
Hibernate: select role0_.id as id7_0_, role0_.version as version7_0_, role0_.authority as authority7_0_, role0_.created_by as created4_7_0_, role0_.date_created as date5_7_0_, role0_.last_updated as last6_7_0_, role0_.last_updated_by as last7_7_0_, role0_.tenant_id as tenant8_7_0_ from role role0_ where role0_.id=?
Hibernate: select this_.role_id as role1_5_0_, this_.user_id as user2_5_0_, this_.created_by as created3_5_0_, this_.date_created as date4_5_0_, this_.last_updated as last5_5_0_, this_.last_updated_by as last6_5_0_, this_.tenant_id as tenant7_5_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
ROLE_ADMIN
ROLE_ITEM_MGR
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"SUCCESS","message":"Login bem sucedido."}, "additionalInfo":{"JSESSIONID":"308FA97202949F6026BCDF79349D71F2","userType":"NO_TYPE"}}
================================================================================
#
--Output from testLoginNoTenantEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "", "username": "admin", "password":"admin"}
				
================================================================================
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"Authentication failed because no company was provided. Please enter a company."}}
================================================================================
#
--Output from testLoginNoTenantPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "", "username": "admin", "password":"admin"}
				
================================================================================
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"A companhia deve ser preenchida."}}
================================================================================
#
--Output from testLoginTenantNotFoundEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "BadTenant", "username": "admin", "password":"admin"}
				
================================================================================
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.created_by as created3_6_0_, this_.date_created as date4_6_0_, this_.last_updated as last5_6_0_, this_.last_updated_by as last6_6_0_, this_.name as name6_0_ from tenant this_ where this_.name=? limit ?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"This company (BadTenant) was not found. Please enter a valid company name."}}
================================================================================
#
--Output from testLoginTenantNotFoundPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "BadTenant", "username": "admin", "password":"admin"}
				
================================================================================
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.created_by as created3_6_0_, this_.date_created as date4_6_0_, this_.last_updated as last5_6_0_, this_.last_updated_by as last6_6_0_, this_.name as name6_0_ from tenant this_ where this_.name=? limit ?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"Esta companhia (BadTenant) não foi encontrada."}}
================================================================================
#
--Output from testLoginNoPasswordEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "naSavassi", "username": "admin", "password":""}
				
================================================================================
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.created_by as created3_6_0_, this_.date_created as date4_6_0_, this_.last_updated as last5_6_0_, this_.last_updated_by as last6_6_0_, this_.name as name6_0_ from tenant this_ where this_.name=? limit ?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"Authentication failed because no password was provided. Please enter a password."}}
================================================================================
#
--Output from testLoginNoUsernamedEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "naSavassi", "username": "", "password":"admin"}
				
================================================================================
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.created_by as created3_6_0_, this_.date_created as date4_6_0_, this_.last_updated as last5_6_0_, this_.last_updated_by as last6_6_0_, this_.name as name6_0_ from tenant this_ where this_.name=? limit ?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"Authentication failed because no username was provided. Please enter a username."}}
================================================================================
#
--Output from testLoginFailedEnglish--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: en-US
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "naSavassi", "username": "admin", "password":"badPw"}
				
================================================================================
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.created_by as created3_6_0_, this_.date_created as date4_6_0_, this_.last_updated as last5_6_0_, this_.last_updated_by as last6_6_0_, this_.name as name6_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.account_expired as account3_1_0_, this_.account_locked as account4_1_0_, this_.created_by as created5_1_0_, this_.date_created as date6_1_0_, this_.email as email1_0_, this_.enabled as enabled1_0_, this_.first_name as first9_1_0_, this_.last_name as last10_1_0_, this_.last_updated as last11_1_0_, this_.last_updated_by as last12_1_0_, this_.locale as locale1_0_, this_.`password` as password14_1_0_, this_.password_expired as password15_1_0_, this_.phone as phone1_0_, this_.tenant_id as tenant17_1_0_, this_.username as username1_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_0_0_, driver0_.version as version0_0_, driver0_.active_status as active3_0_0_, driver0_.car_type as car4_0_0_, driver0_.created_by as created5_0_0_, driver0_.date_created as date6_0_0_, driver0_.last_updated as last7_0_0_, driver0_.last_updated_by as last8_0_0_, driver0_.served_location_id as served9_0_0_, driver0_.tenant_id as tenant10_0_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_4_0_, passenger0_.version as version4_0_, passenger0_.created_by as created3_4_0_, passenger0_.date_created as date4_4_0_, passenger0_.last_updated as last5_4_0_, passenger0_.last_updated_by as last6_4_0_, passenger0_.tenant_id as tenant7_4_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_5_0_, this_.user_id as user2_5_0_, this_.created_by as created3_5_0_, this_.date_created as date4_5_0_, this_.last_updated as last5_5_0_, this_.last_updated_by as last6_5_0_, this_.tenant_id as tenant7_5_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Hibernate: select this_.role_id as role1_5_0_, this_.user_id as user2_5_0_, this_.created_by as created3_5_0_, this_.date_created as date4_5_0_, this_.last_updated as last5_5_0_, this_.last_updated_by as last6_5_0_, this_.tenant_id as tenant7_5_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"User name and or password is invalid. Please try again."}}
================================================================================
#
--Output from testLoginNoPasswordPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "naSavassi", "username": "admin", "password":""}
				
================================================================================
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.created_by as created3_6_0_, this_.date_created as date4_6_0_, this_.last_updated as last5_6_0_, this_.last_updated_by as last6_6_0_, this_.name as name6_0_ from tenant this_ where this_.name=? limit ?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"A senha deve ser preenchida."}}
================================================================================
#
--Output from testLoginNoUsernamedPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "naSavassi", "username": "", "password":"admin"}
				
================================================================================
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.created_by as created3_6_0_, this_.date_created as date4_6_0_, this_.last_updated as last5_6_0_, this_.last_updated_by as last6_6_0_, this_.name as name6_0_ from tenant this_ where this_.name=? limit ?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"SYSTEM","code":"ERROR","message":"O nome do usuário deve ser preenchido."}}
================================================================================
#
--Output from testLoginFailedPortuguese--
Switching to browser client [default]
Creating to new client [default] of type [class com.grailsrocks.functionaltest.client.BrowserClient]

== Making request POST http://localhost:8080/moovt/login/authenticateUser parameters: ==
== Request headers: ============================================================
Accept-Language: pt-BR
Accept-Encoding: gzip, deflate
Content-Type: application/json
Accept: */*
== Content =====================================================================

				{"type":"Self","tenantname": "naSavassi", "username": "admin", "password":"badPw"}
				
================================================================================
Hibernate: select this_.id as id6_0_, this_.version as version6_0_, this_.created_by as created3_6_0_, this_.date_created as date4_6_0_, this_.last_updated as last5_6_0_, this_.last_updated_by as last6_6_0_, this_.name as name6_0_ from tenant this_ where this_.name=? limit ?
Hibernate: select this_.id as id1_0_, this_.version as version1_0_, this_.account_expired as account3_1_0_, this_.account_locked as account4_1_0_, this_.created_by as created5_1_0_, this_.date_created as date6_1_0_, this_.email as email1_0_, this_.enabled as enabled1_0_, this_.first_name as first9_1_0_, this_.last_name as last10_1_0_, this_.last_updated as last11_1_0_, this_.last_updated_by as last12_1_0_, this_.locale as locale1_0_, this_.`password` as password14_1_0_, this_.password_expired as password15_1_0_, this_.phone as phone1_0_, this_.tenant_id as tenant17_1_0_, this_.username as username1_0_ from user this_ where this_.tenant_id=? and this_.username=? limit ?
Hibernate: select driver0_.user_id as user1_0_0_, driver0_.version as version0_0_, driver0_.active_status as active3_0_0_, driver0_.car_type as car4_0_0_, driver0_.created_by as created5_0_0_, driver0_.date_created as date6_0_0_, driver0_.last_updated as last7_0_0_, driver0_.last_updated_by as last8_0_0_, driver0_.served_location_id as served9_0_0_, driver0_.tenant_id as tenant10_0_0_ from driver driver0_ where driver0_.user_id=?
Hibernate: select passenger0_.user_id as user1_4_0_, passenger0_.version as version4_0_, passenger0_.created_by as created3_4_0_, passenger0_.date_created as date4_4_0_, passenger0_.last_updated as last5_4_0_, passenger0_.last_updated_by as last6_4_0_, passenger0_.tenant_id as tenant7_4_0_ from passenger passenger0_ where passenger0_.user_id=?
Hibernate: select this_.role_id as role1_5_0_, this_.user_id as user2_5_0_, this_.created_by as created3_5_0_, this_.date_created as date4_5_0_, this_.last_updated as last5_5_0_, this_.last_updated_by as last6_5_0_, this_.tenant_id as tenant7_5_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Hibernate: select this_.role_id as role1_5_0_, this_.user_id as user2_5_0_, this_.created_by as created3_5_0_, this_.date_created as date4_5_0_, this_.last_updated as last5_5_0_, this_.last_updated_by as last6_5_0_, this_.tenant_id as tenant7_5_0_ from user_role this_ where this_.tenant_id=? and this_.user_id=?
Interceptor createPage: TopLevelWindow[name=""]
Content of web window [TopLevelWindow[name=""]] changed
== Response was 200 (OK) headers: ==============================================
================================================================================
== Content =====================================================================
{"result":{"type":"USER","code":"ERROR","message":"Usuário e senha inválidos."}}
================================================================================
#
]]></system-out>
  <system-err><![CDATA[--Output from testLoginBadMessage--
--Output from testLoginSuccessEnglish--
--Output from testLoginSuccessPortuguese--
--Output from testLoginNoTenantEnglish--
--Output from testLoginNoTenantPortuguese--
--Output from testLoginTenantNotFoundEnglish--
--Output from testLoginTenantNotFoundPortuguese--
--Output from testLoginNoPasswordEnglish--
--Output from testLoginNoUsernamedEnglish--
--Output from testLoginFailedEnglish--
--Output from testLoginNoPasswordPortuguese--
--Output from testLoginNoUsernamedPortuguese--
--Output from testLoginFailedPortuguese--
]]></system-err>
</testsuite>
